<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-07-20T23:42:30+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">끊임없이 성장하는 데이터 분석가</title><subtitle>조금씩 쌓아가다 보면 큰 산이 되겠지</subtitle><author><name>박마토</name></author><entry><title type="html">[SQL] LeetCode 풀이: Basic Aggregate Functions</title><link href="http://localhost:4000/data/SQL_LeetCode4/" rel="alternate" type="text/html" title="[SQL] LeetCode 풀이: Basic Aggregate Functions" /><published>2023-07-20T00:00:00+09:00</published><updated>2023-07-21T07:08:00+09:00</updated><id>http://localhost:4000/data/SQL_LeetCode4</id><content type="html" xml:base="http://localhost:4000/data/SQL_LeetCode4/"><![CDATA[<p>  안녕하세요. 이번 포스트부터는 LeetCode50 Aggregate Functions 이어 가겠습니다. 문제를 풀어보다가 중간중간 막히는 부분이 많았던 구간인 것 같습니다.😂</p>

<h1 id="집계-함수aggregate-funstion란">집계 함수(Aggregate Funstion)란?</h1>
<p>  집계 함수란 <strong>테이블 전체 혹은 여러 행으로부터 하나의 결과값을 반환하는 함수</strong>입니다. 예를 들어, Avg, Sum, Max, Min, Count 등 함수가 집계 함수이며, GROUP BY 절과 함께 사용됩니다.</p>

<h1 id="3-basic-aggregate-functions">3. Basic Aggregate Functions</h1>
<h2 id="31-not-boring-movies">3.1 Not Boring Movies</h2>
<h3 id="311-table-description--question">3.1.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Cinema</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>movie</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>description</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>rating</td>
      <td>float</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row contains information about the name of a movie, its genre, and its rating.<br />
rating is a 2 decimal places float in the range [0, 10]</p>
</blockquote>

<p><strong>Question</strong><br /></p>
<ul>
  <li>Write an SQL query to report the movies with an odd-numbered ID and a description that is not “boring”.</li>
  <li>Return the result table ordered by rating in descending order..<br /></li>
</ul>

<h3 id="312-solution">3.1.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">id</span><span class="p">,</span>
    <span class="n">movie</span><span class="p">,</span>
    <span class="n">description</span><span class="p">,</span>
    <span class="n">rating</span>
<span class="k">FROM</span> 
    <span class="n">Cinema</span>
<span class="k">Where</span>
    <span class="n">description</span> <span class="o">!=</span> <span class="s1">'boring'</span> <span class="k">and</span>
    <span class="n">id</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span> <span class="c1">-- or mod(id, 2) &lt;&gt; 0</span>
<span class="k">Order</span> <span class="k">By</span>
    <span class="n">rating</span> <span class="k">desc</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  간단한 문제이다. 지루하지 않은 영화를 필터링하기 위하여 <code class="language-plaintext highlighter-rouge">description != 'boring'</code> 조건절을 추가한 다음, 홀수인 id를 추출하기 위한 조건절을 추가하면 된다.<br />
  홀수인 id를 고르기 위해서는 id(int)를 2로 나눴을 때 나머지가 0인지 1인지 체크하면 된다.<br /></p>

<h3 id="313-good-to-know">3.1.3 Good to Know</h3>
<p>  나머지를 구하는 방법은 여러가지가 있다. 우선 ‘%’ 연산자도 나머지를 반환하는 연산자인데 위 풀이에서 <code class="language-plaintext highlighter-rouge">id % 2</code>는 id를 2로 나눈 나머지를 반환한다. mod(a,b)함수도 나머지를 반환하는 함수이며 a를 b로 나눈 나머지를 반환한다.</p>

<h2 id="32-average-selling-price">3.2 Average Selling Price</h2>
<h3 id="321-table-description--question">3.2.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Prices</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>product_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>start_date(PK)</td>
      <td>date</td>
    </tr>
    <tr>
      <td>end_date(PK)</td>
      <td>date</td>
    </tr>
    <tr>
      <td>price</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table indicates the price of the product_id in the period from start_date to end_date.<br />
For each product_id there will be no two overlapping periods. That means there will be no two intersecting periods for the same product_id.<br /></p>
</blockquote>

<p>table: UnitsSold</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>product_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>purchase_date</td>
      <td>date</td>
    </tr>
    <tr>
      <td>units</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>There is no primary key for this table, it may contain duplicates.<br />
Each row of this table indicates the date, units, and product_id of each product sold.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query to find the average selling price for each product. average_price should be rounded to 2 decimal places.<br />
Return the result table in any order.</p>

<h3 id="322-solution">3.2.2 Solution</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">product_id</span>    <span class="k">As</span> <span class="n">product_id</span><span class="p">,</span>
    <span class="n">round</span><span class="p">(</span><span class="k">sum</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">price</span> <span class="o">*</span> <span class="n">b</span><span class="p">.</span><span class="n">units</span><span class="p">)</span> <span class="o">/</span> <span class="k">sum</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">units</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>         <span class="k">as</span> <span class="n">average_price</span>
<span class="k">From</span>
    <span class="n">Prices</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span>
    <span class="n">UnitsSold</span> <span class="n">b</span>
    <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">product_id</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">start_date</span> <span class="o">&lt;=</span> <span class="n">b</span><span class="p">.</span><span class="n">purchase_date</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">end_date</span> <span class="o">&gt;=</span> <span class="n">b</span><span class="p">.</span><span class="n">purchase_date</span>
<span class="k">GROUP</span> <span class="k">BY</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">product_id</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  관건은 UnitsSold 테이블의 purchase_date가 Prices 테이블의 start_date와 end_date사이에 오도록 하는 것이다. 어떻게 하면 될까 고민해보다가 JOIN절의 On절에서 처리해보자 생각해보고 무작정해봤다. 그런데 Join이 잘 되길래 문제를 수월하게 풀 수 있었다. <br />
  기존에 쓰던 툴은 이렇게 특정 Column이 어떤 기간 내에 오도록 Join하는 경우 제공하는 기능이 있었다. WildMatch라는 함수가 제공되어서 Key와 start인수, end인수를 입력하면 자동으로 매칭해줬다. 그래서 SQL도 유사한 함수가 있나 찾아봤는데 제공하는 함수는 없길래 다른 방법을 생각해봤고 적용했다.</p>

<h3 id="323-improve">3.2.3 Improve</h3>
<p>  무작정 적은 코드라 맞는지 틀린지 알 수가 없어 문제를 풀어보고나면 다른 사람들의 풀이를 참조해보곤 하는데 좋은 코드가 있었다!</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 내가 작성한 쿼리문</span>
<span class="k">Left</span> <span class="k">Join</span>
    <span class="n">UnitsSold</span> <span class="n">b</span>
    <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">product_id</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">start_date</span> <span class="o">&lt;=</span> <span class="n">b</span><span class="p">.</span><span class="n">purchase_date</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">end_date</span> <span class="o">&gt;=</span> <span class="n">b</span><span class="p">.</span><span class="n">purchase_date</span>
<span class="c1">-- 다름 사람들의 solution 참조해서 개선</span>
<span class="k">Left</span> <span class="k">Join</span>
    <span class="n">UnitsSold</span> <span class="n">b</span>
    <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">product_id</span> <span class="k">and</span>  <span class="n">b</span><span class="p">.</span><span class="n">purchase_date</span> <span class="k">Between</span> <span class="n">a</span><span class="p">.</span><span class="n">start_date</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">end_date</span>
</code></pre></div></div>
<p>  Between구문이 있는지 몰랐었다. 속도가 뭐가 빠른지는 대용량 데이터를 테스트 해보지 않아서 잘 모르겠다. 다만, 아래 코드가 직관적으로 읽기 수월하다고 생각한다.</p>

<h2 id="33-project-employees-i">3.3 Project Employees I</h2>
<h3 id="331-table-description--question">3.3.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Project</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>project_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>employee_id(PK)</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>employee_id is a foreign key to Employee table.<br />
Each row of this table indicates that the employee with employee_id is working on the project with project_id.</p>
</blockquote>

<p>table: Employee</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>employee_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>experience_years</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>employee_id is the primary key of this table. It’s guaranteed that experience_years is not NULL.<br />
Each row of this table contains information about one employee.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write an SQL query that reports the average experience years of all the employees for each project, rounded to 2 digits.<br />
Return the result table ordered by student_id and subject_name.</p>

<h3 id="332-solution">3.3.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">project_id</span>                          <span class="k">as</span> <span class="n">project_id</span><span class="p">,</span>
    <span class="n">round</span><span class="p">(</span><span class="k">Avg</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">experience_years</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>     <span class="k">as</span> <span class="n">average_years</span>
<span class="k">FROM</span>
    <span class="n">Project</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span>
    <span class="n">Employee</span> <span class="n">b</span>
    <span class="k">On</span> <span class="n">a</span><span class="p">.</span><span class="n">employee_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">employee_id</span>
<span class="k">Group</span> <span class="k">By</span>
    <span class="n">a</span><span class="p">.</span><span class="n">project_id</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  기본적인 문제로 어려운 문제는 아니라 생각한다.</p>

<h2 id="34-percentage-of-users-attended-a-contest">3.4 Percentage of Users Attended a Contest</h2>
<h3 id="341-table-descriptoin--question">3.4.1 Table descriptoin &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Users</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>user_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>user_name</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table contains the name and the id of a user.</p>
</blockquote>

<p>table: Register</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>contest_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>user_id(PK)</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table contains the id of a user and the contest they registered into.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write an SQL query to find the percentage of the users registered in each contest rounded to two decimals.<br />
Return the result table ordered by percentage in descending order. In case of a tie, order it by contest_id in ascending order.</p>

<h3 id="342-solution">3.4.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">contest_id</span>                                <span class="k">as</span> <span class="n">contest_id</span><span class="p">,</span>
    <span class="n">Round</span><span class="p">(</span><span class="k">Count</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">contest_id</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">count</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">user_id</span><span class="p">)</span> <span class="k">From</span> <span class="n">Users</span> <span class="n">b</span> <span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>     <span class="k">as</span> <span class="n">percentage</span>
<span class="k">FROM</span>
    <span class="n">Register</span> <span class="n">a</span>
<span class="k">Group</span> <span class="k">by</span>
    <span class="n">a</span><span class="p">.</span><span class="n">contest_id</span>
<span class="k">Order</span> <span class="k">by</span>
    <span class="n">percentage</span> <span class="k">desc</span><span class="p">,</span> <span class="n">contest_id</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  이 문제는 쉽지 않았고 고민을 많이 했었다. 각 contest별로 참석율을 구하기 위해서는 총 user_id 수를 구한다음 나눠줘야 했다. 총 user_id를 어떻게 구하기 위해서 2가지 방법을 찾았다.</p>

<h3 id="343-good-to-know">3.4.3 Good to Know</h3>
<p>  우선 첫번째 방법은 위 SQL코드처럼 subquery를 활용하는 방법이다. SELECT 절에서 사용됐고 단일 상수값을 반환하는 Subquery이다. Subquery는 아직은 생소해서 날잡고 한 번 정리해야 할 것 같다.<br />
  두번째 방법은 해당 값을 변수로 선언하여 활용하는 방법이다.</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DECLARE</span> <span class="o">@</span><span class="k">user</span> <span class="nb">int</span> <span class="o">=</span> <span class="p">(</span><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">from</span> <span class="n">Users</span><span class="p">)</span>

<span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">contest_id</span><span class="p">,</span> <span class="n">round</span><span class="p">((</span><span class="k">count</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">user_id</span><span class="p">)</span> <span class="o">*</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="o">@</span><span class="k">user</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>    <span class="k">as</span> <span class="n">percentage</span>
<span class="k">FROM</span> 
    <span class="n">Register</span> <span class="n">a</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">a</span><span class="p">.</span><span class="n">contest_id</span> 
<span class="k">ORDER</span> <span class="k">BY</span>  <span class="n">percentage</span> <span class="k">Desc</span><span class="p">,</span>  <span class="n">a</span><span class="p">.</span><span class="n">contest_id</span> <span class="k">Asc</span>
</code></pre></div></div>
<p>변수를 선언해서 활용하는 SQL 구문을 짜는 것도 꽤 깔끔해보인다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="SQL" /><category term="LeetCode" /><summary type="html"><![CDATA[  안녕하세요. 이번 포스트부터는 LeetCode50 Aggregate Functions 이어 가겠습니다. 문제를 풀어보다가 중간중간 막히는 부분이 많았던 구간인 것 같습니다.😂]]></summary></entry><entry><title type="html">[데이터분석] 4개 인자를 한 산점도에 나타내기</title><link href="http://localhost:4000/data/data_analysis1/" rel="alternate" type="text/html" title="[데이터분석] 4개 인자를 한 산점도에 나타내기" /><published>2023-07-16T00:00:00+09:00</published><updated>2023-07-17T08:52:00+09:00</updated><id>http://localhost:4000/data/data_analysis1</id><content type="html" xml:base="http://localhost:4000/data/data_analysis1/"><![CDATA[<p>  4개 인자를 한 산점도 차트에 표현하는 미션이 주어졌습니다. 4개 인자를 한 산점도에..?? 왜 4개의 인자를 한 산점도로 표현해야했는지 그리고 어떻게 해결했는지 기록하고자 합니다.</p>

<h2 id="1-배경">1. 배경</h2>
<p>  데이터 분석을 통한 에너지 사용 절감 프로젝트의 일환으로 에너지 사용량을 모니터링 할 수 있는 대시보드 화면을 개발하던 중, 팀장님께서 현재 에너지 사용량이 적정한 수준으로 사용되고 있는지 확인할 수 있는 시각화 차트를 만들어보라고 하셨다. 데이터 분석을 통해 에너지 사용에 영향을 미치는 중요한 3가지 인자를 도출했고, 이를 기반으로 어떻게 하면 클라이언트가 쉽게 볼 수 있는 시각화 차트를 구성할 수 있을지 고민해봤습니다. 우선, 어떤 차트를 통해 표현할 지를 정해야 했는데 인자 간 관계를 볼 때 기본적으로 사용하는 산점도를 활용해 표현해보고자 했습니다.</p>
<blockquote>
  <p>※ BI Tool로 Qlik Sense를 활용하는데 3차원 산점도는 제공하고 있지 않아 주로 2차원 산점도를 활용해 대시보드를 개발하고 있습니다. ?3차원 산점도 Extension을 찾아볼까?</p>
</blockquote>

<h2 id="2-문제점">2. 문제점</h2>
<p>  다만 1개의 Y인자와 3개의 X인자 즉 4개의 인자를 한 산점도에 표현해야 하는 문제점이 있었습니다. 산점도는 보통 Y축과 X축 그리고 Z축(색으로 표시)을 활용하여 3개 인자 간 관계를 표현하기엔 적합하지만 4개 인자를 한번에 표현하기에는 한계가 있었습니다. 측정값을 활용해 Point의 크기를 조절하여 하나의 차원을 더 추가할 수 있지만, 가시성이 많이 떨어지는 문제가 있었습니다. 어떻게 해결할 수 있을지 이런 저런 방법을 고민했었고, 몇 가지 떠올렸던 아이디어는 다음과 같습니다.</p>

<h3 id="21-대안1-매개변수-활용해보기">2.1 대안1: 매개변수 활용해보기</h3>
<p>  Y축은 에너지 사용량으로 고정한 채, X축과 Z축을 매개 변수를 활용해 원하는 인자를 선택하여 산점도를 그릴 수 있게끔 해봤습니다. 장점은 사용자가 매개 변수를 활용해 원하는 대로 인자를 클릭하면서 데이터를 볼 수 있지만, 4개 인자를 한 번에 표현하지 못하는 것은 여전했습니다. 이는 사용자가 인자를 클릭해가면서 머릿속에 상상해가면서 비교하거나, 따로 캡쳐를 떠가면서 비교해야 하기에 활용도가 많이 떨어지는 아쉬움이 있습니다.</p>

<h3 id="22-대안2-여러-산점도를-그리기">2.2 대안2: 여러 산점도를 그리기</h3>
<p>  대시보드를 만들 때, 굳이 하나의 산점도만 그려야 한다는 법은 없습니다. 그래서 여러 개의 산점도를 한 화면에 그려보면 어떨까 생각했습니다. 그려보고 나니 여러개의 산점도를 통해 정보를 얻을 수 있지만, 여전히 4개의 인자를 한 산점도에서 확인하지 못하는 한계가 있었습니다. 또 하나의 문제는 차트가 많아지는 것은 사용자가 받아들여야 하는 정보가 그 만큼 증가한다는 것이고 복잡해지기 때문에 사용 편의성도 떨어지게 됩니다.</p>

<h2 id="3-해결책">3. 해결책!</h2>
<p>  이런저런 고민을 해봤지만 해결이 잘 안되던 차에 팀장님과 회의를 하면서 한 가지 기발한 아이디어를 주셨습니다. 기본 아이디어는 <span style="color:red"><strong>인자의 개수를 4개 → 3개로 줄이는 것</strong></span>이었습니다. 왜 생각을 못했던 걸까요? 듣고 나니 명쾌하고 심플했습니다. 인자의 개수를 줄이면 2차원 산점도로도 충분히 표현이 가능합니다. 그렇다면 어떻게 줄일 수 있었을까요?</p>

<h3 id="31-x1인자-영향력-없애기">3.1 X1인자 영향력 없애기</h3>
<p>  3가지 X인자를 각각 X1, X2, X3인자라고 하겠습니다. X3인자는 외기 온도이며, 외생적으로 주어지는 변수입니다. 이제 나머지 X1인자와 X2인자에 대해서 쉽게 예를 들어보겠습니다. 우리가 맛있는 라면을 끓이기 위해서는 냄비에 물과 라면을 각각 넣어줘야 합니다. 라면을 많이 넣을수록 물도 많이 넣어야하고 물이 많아질수록 GAS 사용량도 늘어나겠죠?(비유가 찰떡이네요🤣) 여기서 X1인자를 라면 양, X2인자를 물 투입량, Y인자를 GAS사용량이라고 해보겠습니다. 에너지 사용 관점에서 이렇게 표현해보면 어떨까요? <strong>&lt;라면 1g당 물 투입량, 라면 1g당 GAS 사용량&gt;</strong> 자연스럽게 3개 인자를 2개 인자로 줄일 수 있게 됐습니다! 또한 라면 양에 따라 에너지 사용량에 미치는 영향까지 제거하여 비교할 수 있게 됐습니다. 간단하지만 왜 생각을 못했었는지..ㅎㅎㅎ<br /><br />
  사실 어떤 한 인자를 나눠줌으로써 효과를 제거하는 방법이 새로운 방법은 아니고 많이 쓰이는 방법입니다. 심지어 제가 석사과정 중에 응용미시계량, 계량을 전공하면서 정말 많이 썼던 방법이었습니다. 까먹고 있었을 뿐… 예를 들면 경제학에서는 인구수에 따른 효과를 제거하기 위해 2가지 방법을 사용하는데, 하나는 X변수로 회귀식에 추가하거나 다른 하나는 Y인자를 인구수로 나눠서 1인당 Y값으로 변환해 인구수에 따른 효과를 제거하는 방법을 사용합니다. 아무래도 도메인 영역이 다르다보니 지레 단정짓고 다양한 시도를 해보지 못했던 것 같습니다. 긍정적이라면 앞으로는 이 방법을 활용할 수 있겠죠?ㅎㅎ</p>

<h2 id="마치며">마치며</h2>
<p>  비록 까먹고 있던 스킬이지만 이번 프로젝트를 통해 다시 한 번 복기할 수 있었습니다. 4개 인자를 한 산점도에 어떻게 표시하지? 이 포인트에 너무 매몰되어 있었던 것 같습니다. 이렇게 데이터를 시각적으로 표현하는 방법은 너무나 다양하고 정답이 없기에 이렇게 경험을 쌓아가면서 내실을 다져가야겠습니다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Data Analysis" /><category term="Visualization" /><category term="Scatter Plot" /><summary type="html"><![CDATA[  4개 인자를 한 산점도 차트에 표현하는 미션이 주어졌습니다. 4개 인자를 한 산점도에..?? 왜 4개의 인자를 한 산점도로 표현해야했는지 그리고 어떻게 해결했는지 기록하고자 합니다.]]></summary></entry><entry><title type="html">[회고록] 23년 7월 3주차: 커뮤니케이션</title><link href="http://localhost:4000/data/weekly_memoir_8/" rel="alternate" type="text/html" title="[회고록] 23년 7월 3주차: 커뮤니케이션" /><published>2023-07-15T00:00:00+09:00</published><updated>2023-07-17T08:52:00+09:00</updated><id>http://localhost:4000/data/weekly_memoir_8</id><content type="html" xml:base="http://localhost:4000/data/weekly_memoir_8/"><![CDATA[<p>  이번주는 커뮤니케이션 관련하여 2가지 이슈가 있었습니다. 한 번은 팀 회의를 하면서 서로의 커뮤니케이션을 보면서 느꼈던 점과 다른 한 번은 클라이언트와 화상회의를 하면서 느꼈던 점들을 기록해보고자 합니다. 테마를 정해보자면 다음과 같이 정리할 수 있을 것 같습니다.</p>
<blockquote>
  <ol>
    <li>효율적인 커뮤니케이션</li>
    <li>보수적인(&amp;방어적인) 클라이언트 설득하기</li>
  </ol>
</blockquote>

<h2 id="1-효율적인-커뮤니케이션">1. 효율적인 커뮤니케이션</h2>
<p>  업무에 있어서 효율적인 커뮤니케이션이란 무엇일까요? <br />
⇨ <strong>원하는 바 혹은 현 상황을 명확하게 정리해서 빠르게 상대방이 이해할 수 있도록 전달하는 것</strong>이라고 생각합니다. <br /><br /></p>

<p>  업무에 있어서 상호간에 효율적인 커뮤니케이션은 매우 중요합니다. 프로젝트 방향에 대해 명확한 의사결정을 내리거나 문제를 제대로 풀어내는 과정에서 서로 오해를 없애고, 시간 낭비를 줄이기 위해서는 효율적인 커뮤니케이션이 필요합니다. 효율적인 커뮤니케이션의 중요성에 대해서는 많은 분들이 동의하실 거라 생각합니다. 다만, 효율적인 커뮤니케이션이 잘 될 때도 있지만 안되는 경우도 종종 있습니다. 왜 효율적인 커뮤니케이션이 어렵고, 어떻게 하면 좋을지에 대한 스스로의 고민을 적어보고자 합니다. <br /><br /></p>

<h3 id="11-왜-어려울까">1.1 왜 어려울까?</h3>
<blockquote>
  <p>※ 지극히 개인적인 경험에 의한 고찰입니다. 특히 주니어의 입장으로 겪은 경험들입니다.</p>
</blockquote>

<p>  일을 처음 시작하면서 어려웠던 점 중에 하나가 <span style="color:red"><strong>내가 해야할 말과 하고싶은 말을 구분하는 것</strong></span>이었습니다. 실무자들은 자신이 맡은 실무와 관련된 사항들을 일일이 나열하면서 커뮤니케이션 하는 경우가 왕왕 있습니다. 하지만, 중요한 것은 관리자나 의사결정권자들에게 디테일한 부분은 부차적인 것이라는 점입니다. 당장 의사결정에 필요한 핵심 정보, 근거가 필요합니다. 그렇기에 같은 장소에 있지만 서로 다른 얘기를 하면서 커뮤니케이션은 정체되고 서로를 탓하게 되는 경우가 생기는 것 같습니다.<br /><br />
  그 다음으로는 본인이 <strong>해당 사항에 대해 완벽하게 숙지하지 못할 때</strong> 커뮤니케이션이 제대로 이루어지지 않았습니다. 저도 어떤 사항에 대해 잘 숙지하고 있다고 생각했음에도 막상 누군가 물어봐서 말로 대답을 할 때, 대답을 제대로 하지 못한 경우가 있습니다. 이는 사실 애매하게 알고 있던 것이었습니다. 제대로 알지 못하기에 제대로 답하지 못하고 둘러대기 시작합니다. 그렇게 되면 이 커뮤니케이션은 점점 꼬이게 됩니다.</p>

<h3 id="12-어떻게-해야할까">1.2 어떻게 해야할까?</h3>
<p>  우선 중요한 것은 <strong>상대방이 무엇을 원하는지 정확히 파악</strong>해야 합니다. 눈치가 빠른 사람이라면 쉽겠지만 그렇지 않은 분이라면 애매한 경우엔 무조건 되물어서 상대방의 질문의 의도를 명확히 파악해야 합니다. 질문의 의도만 명확히 파악해도 반 이상은 해결되는 것 같습니다. <br /><br />
  그 다음으로는 <strong>두괄식</strong>으로 하는게 훨씬 효율적이라 생각합니다. 해야할 말과 하고싶은 말이 상이한 경우 해야할 말을 먼저하고 그 후에 하고싶은 말을 해야합니다. 일단, 질문사항이나 요구사항에 명확한 답변을 제시하고 그에 따른 디테일은 후에 나열하면서 커뮤니케이션을 이어가는 것도 한 방법이라 생각합니다. 디테일이 먼저 나가면 커뮤니케이션이 제자리에서 빙빙 돌게 되는 경우를 보게 됩니다. <br /><br />
  아무래도 실무자 입장에서는 해당 사항에 대한 이슈 사항을 사소한 것이라도 얘기하고 싶기 마련입니다. 물론 이도 중요합니다. 숨기거나 놓치게 되면 나중에 문제가 생길 소지가 높기 때문입니다. 다만, 상대방의 궁금증을 먼저 해결한 후에 유도하여 논의를 진행시키는 것도 꽤 유용한 커뮤니케이션 스킬이라 생각합니다. <br /><br />
  마지막으로 커뮤니케이션을 하면서 횡설수설하게 되면 멈추고 본인이 현 이슈에 대해서 제대로 인지하고 있는지 돌아봐야 합니다. 그리고 정말 제대로 인지하지 못하고 있는 것이라면 인정한 후에 양해를 구하고 제대로 숙지한 다음에 진행해야 합니다. 고집부리고 억지부리면 시간만 흐르고 나중에 더 챙피할 일이 생길 수도 있습니다.</p>

<p>  저도 효율적이고 명확한 커뮤니케이션을 하기 위해 노력하고 있습니다. 하지만 종종 실수를 하고, 시행착오를 겪습니다. 실수를 줄이고자 복기하기 위하여 기록하고 곱씹어보며 노력하는 중입니다😊</p>

<h2 id="2-보수적인방어적인-클라이언트-설득하기">2. 보수적인(&amp;방어적인) 클라이언트 설득하기</h2>
<p>  우리 팀은 데이터 분석을 통한 컨설팅을 진행하기에 고객에게 기존의 업무 Process 대비 데이터에 기반한 새로운 업무 Process를 제시하는 경우가 있습니다. 데이터 기반의 업무 효율화, 의사결정 체계로의 전환으로 일종의 DT라고 볼 수 있겠습니다. 이러하다보니, 연차가 오래되고 보수적인 클라이언트의 경우 우리 팀의 제안에 대하여 굉장히 방어적인 태도를 보이는 경우가 잦습니다. 열심히 일해서 결과물을 가져갔는데 클라이언트의 반응이 “우린 이런거 필요없어요.”로 나올 때, 저도 사람인지라 허탈함이 밀려옵니다. <br /><br />
  지난 클라이언트와의 미팅에도 이러한 상황이 발생했습니다. 우리 팀은 당황했지만 결국은 팀장님이 클라이언트를 설득하는데 성공했습니다. 그 모습을 보면서 정말 배운 것이 많았고 꼭 기록해놔야 겠다고 생각했습니다.</p>

<h3 id="21-확신">2.1 확신</h3>
<p>  우리 팀은 우리가 제안하는 방향에 대해서 확신이 있었습니다. 다만, 아무래도 새로운 업무 Process이다보니 거부감이 심했습니다. 보수적인 클라이언트는 우리 팀이 제시한 내용에 대해 이해하기 어렵고 복잡하다 이렇게 까지 필요없다라고 계속 거부했습니다. 다만, 뉘앙스를 봤을 때 우리 팀이 제시한 방안이 틀린 것이 아니라 귀찮고 이해하기 어려우니 받아들이려고 하지 않는 태도로 보였습니다. 아마 팀장님은 이 부분을 캐치하고 파고드신 것 같습니다.</p>

<h3 id="22-설득">2.2 설득</h3>
<p>  우리 팀은 우리가 제시한 방안에 대해서 조금 더 쉽게 풀어서 설명을 했고, <span style="color:red"><strong>이 제안이 기존 업무 Process 대비 어떠한 장점을 갖고 있는 지</strong></span>를 설명했습니다. 우리가 잡은 Point는 다음과 같습니다.</p>
<blockquote>
  <ol>
    <li>데이터를 통한 빠른 문제 원인 파악 가능 - 효율성 제고</li>
    <li>1번을 통한 명확한 업무 지시 및 문제 해결 가능</li>
  </ol>
</blockquote>

<p>  설득을 하면서 클라이언트가 갖고 있는 오해를 풀어드렸고, 왜 이 제안이 기존에 업무 Process대비 장점이 있는지 어필했습니다. 그럼에도 불구하고 클라이언트에 태도는 완강했습니다. 하지만 팀장님은 포기하지 않고 끈질기게 설득에 들어갔습니다. 제가 봤을 때에 클라이언트가 마음을 열기 시작한 부분은 같이 차트를 보면서 데이터를 어떻게 해석해야 하는지 얘기하면서 부터였던 것 같습니다. 제 개인적인 느낌이라 아닐수도 있습니다. 다만, 지속적으로 설득하다보니 클라이언트도 우리가 제시한 논리에 공감하기 시작했고 고민하기 시작하더니 결국엔 한 번 해보겠다고 하면서 설득에 성공했습니다.</p>

<h3 id="23-뚝심">2.3 뚝심</h3>
<p>  분석 컨설팅을 하다보면 클라이언트를 설득하기 위해서 뚝심있게 밀고 나가야 할 때가 필요합니다. 클라이언트가 도메인 지식에 월등하기 때문에 보통은 클라이언트 의견에 좌지우지되기 쉽상이지만, 아니라고 생각할때는 강력하게 밀어붙여 설득이 필요합니다. 그러다 보면 부딪히는 경우도 생기지만, 논리적으로 탄탄하다면 결국엔 설득이 되는 것 같습니다(논리가 안 통하는 상대는 아직 만나본 적이 없기에 잘 모르겠습니다…). 클라이언트에게 너무 끌려다니기보단 확신을 갖고 밀어붙이는 태도도 필요하다는 것을 많이 배웠습니다.</p>

<h2 id="마치며">마치며</h2>
<p>  이번 주는 커뮤니케이션에 관한 다양한 이슈가 있었습니다. 커뮤니케이션은 분석 스킬, 실무 스킬과는 다른 의미로 매우 그리고 항상 어렵습니다. 낙담할 때도 있곤 하지만 더 나은 커뮤니케이션을 위하여 조금씩 개선시켜 나아가고자 합니다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Memoir" /><summary type="html"><![CDATA[  이번주는 커뮤니케이션 관련하여 2가지 이슈가 있었습니다. 한 번은 팀 회의를 하면서 서로의 커뮤니케이션을 보면서 느꼈던 점과 다른 한 번은 클라이언트와 화상회의를 하면서 느꼈던 점들을 기록해보고자 합니다. 테마를 정해보자면 다음과 같이 정리할 수 있을 것 같습니다. 효율적인 커뮤니케이션 보수적인(&amp;방어적인) 클라이언트 설득하기]]></summary></entry><entry><title type="html">[회고록] 23년 7월 2주차: 분석 모델링 수행</title><link href="http://localhost:4000/data/weekly_memoir_7/" rel="alternate" type="text/html" title="[회고록] 23년 7월 2주차: 분석 모델링 수행" /><published>2023-07-05T00:00:00+09:00</published><updated>2023-07-06T07:30:00+09:00</updated><id>http://localhost:4000/data/weekly_memoir_7</id><content type="html" xml:base="http://localhost:4000/data/weekly_memoir_7/"><![CDATA[<p>  지난 2주는 에너지 사용량 증감 원인 분석하고 그 결과를 문서화 하느라 정신 없이 지나갔네요. 월간 보고회를 진행하기 위해 쳇바퀴 처럼 반복되는 매월이지만 최근 꽤나 재미있는 분석을 진행했습니다. 이번에는 분석 모델링을 통해서 Y인자의 변동을 설명하고자 하였고 흥미로운 결과가 나와서 기록하고자 합니다.</p>

<h2 id="1-배경이유">1. 배경/이유</h2>
<p>  저는 현재 공장 에너지 절감 프로젝트를 수행하고 있고, 에너지 별 문제를 진단하고 분석을 통해 절감 요소를 도출하거나 에너지 사용량 증감을 설명하는 인자들을 도출하는 작업을 하고 있습니다. 이전까지는 에너지 별 공정 매커니즘에 기반하여 후보영향인자들을 선정한 다음 인자별로 단변량 분석을 통해 문제를 풀어나갔습니다(믿기 어렵겠지만 상당 부분 단변량 분석을 통해 문제가 해결이 됩니다). 하지만, 이번에 분석한 에너지 사용량은 단변량으로 분석하기에는 한계가 있었습니다. 다양한 변수가 복학접으로 영향을 미치다보니 단변량 분석을 통해서는 명확한 관계가 드러나지 않았기 때문이었습니다. 따라서, 우리는 분석 모델링을 통해 에너지 Y인자의 변동을 잘 설명할 수 있는 X인자의 조합을 찾고 그 효과를 추정하기 위해 분석 모델링을 수행하였습니다.</p>

<h2 id="2-기준">2. 기준</h2>
<p>  다양한 인자들의 조합 중 최적의 조합을 찾기 위해서는 기준이 필요하다. 우리는 주로 <span style="color:red"><strong>설명력(R^2)</strong></span>을 기준으로 판단을 한다(예측 모형이 아니다!). 왜냐하면 우리는 Y인자의 변동을 가장 잘 설명할 수 있는 모형을 찾고자 하기 때문이다. <br />
  그 외에도 중요하게 따져봐야 할 것들이 있다. 선형 회귀식을 사용할 때에는 부호가 매커니즘과 일치하는지를 따져봐야 한다. 매커니즘과 맞지 않는 부호가 나올 경우, 클라이언트를 설득할 수 없다. 이 때에는 누락변수가 있는 것은 아닌지 이유를 살펴보고 보완을 해야 한다. <br />
   또 중요한 점은 클라이언트가 납득할 수 있어야 한다. 흔히 도메인 지식이 약한 분석가 혹은 조직이 하는 실수가 수 많은 변수들을 떄려넣고 설명력 혹은 예측력이 가장 높은 모형을 클라이언트에게 제공하는 것인데, 이러한 결과를 제시할 경우 클라이언트에게 신뢰받기는 힘들 것이다. (이는 산업 분야마다 다르다. 하지만 분야를 막론하더라도 컨설팅을 수행하는 조직이라면 이 점을 반드시 유의해야 한다.)<br />
  따라서 내 기준을 아래와 같이 정했다.</p>
<blockquote>
  <p><strong>최우선 기준은 설명력이다. 다만, 설명력을 조금 손해보더라도 해석이 우월한 조합이 있다면 그 조합을 선택하자</strong></p>
</blockquote>

<p>  어떻게 보면 주관적이고 분석가의 의도가 들어갈 수 밖에 없다. 그렇기에 항상 결과에 대해 의심하고 신중하게 선택하여야 한다. 이런 점에서 분석가 일을 하다보면 테크니컬한 문제들은 별게 아니란 생각이 든다. 항상 이렇게 분석하고 선택하는 과정이 훨씬 더 어렵다.</p>

<h2 id="3-결과">3. 결과</h2>
<p>  설명력과 매커니즘을 기반으로 선형회귀 모형을 활용해 다양한 인자들의 조합을 탐색하였고 3가지 인자의 조합을 최종 선택하였다. 3가지 인자로 선형 회귀 모형을 Fit 했을 때, Y인자 변동의 78%를 설명하는 결과를 얻을 수 있었다. 계수들의 부호도 모두 공정 매커니즘과 일치했고, 해석에도 만족스러웠다.</p>

<h2 id="4-활용">4. 활용</h2>
<p>  우리가 분석한 결과가 어떻게 활용될까? 우리는 분석 결과에 따르면 특정 X인자 (설비효율)가 개선될 경우, 금액적 효과가 대략 xx원이 될 것이라고 클라이언트에게 리포트 했다(물론 정말 그런지는 클라이언트가 정밀하게 따져보고 검증해야 하는 과정이 필요하다). 그 수치는 클라이언트가 예상했던 금액 효과 보다 컸다. 알고보니 클라이언트 사에서는 에너지 사용 절감을 위해 설비 교체 투자 건을 진행하고자 했지만, 투자 대비 절감 효과가 낮을 것으로 예상돼 보류 중인 상황이었다. (현재 경기가 안 좋다보니 투자에 매우 민감한 상황이다.) 하지만, 분석 결과에 따르면 설비 교체로 인한 절감 효과가 매우 클 것으로 예상되기에 클라이언트사에 의사결정 사항에 영향을 줄 수 있게 됐고, 변화가 생길 수도 있을 것이다.<br />
  결국 어떤 조직이 데이터를 기반으로 의사결정 한다는 의미는 데이터 분석을 통해 객관적인 증거를 활용한다는 것이라 생각한다. 거기서 나의 역할은 더 신뢰할 수 있는 근거를 만들기 위해 엄밀한 분석을 수행하는 것이라 생각한다.</p>

<h2 id="5-흥미로운-점">5. 흥미로운 점</h2>
<p>  경제학 석사를 전공하면서 무수히 많은 회귀식을 생성했고 해석했다. 다만, 실무를 하면서 잠깐 멀어졌기에 감각(?)이 떨어졌다고 해야하나 여튼 그런 상황이었다. 단변량 분석에서 Y인자와 X인자 간의 관계가 명확하게 도출되지 않았지만, 다변량 분석 모델링을 통해 명쾌하게 해석되는 결과를 보면서 참 많은 생각이 들었다. 왜 단변량 분석에서는 잘 안보이고 다변량 분석에서는 잘 보였을까? 생각해봤을 때, 여러 인자가 복합적으로 영향을 미치기 때문이라 생각한다. 단변량 분석과 다변량 분석을 비교해보면 다음과 같을 것이다.</p>
<blockquote>
  <ul>
    <li>단변량 분석: 여러 인자들이 중요한 순서(상관성이 높은 순 혹은 매커니즘 기반 순서)대로 Y인자 변동에 영향을 끼치는 경우, 단변량 분석이 용이함<br />
  주로 상관성이 높은 X1인자를 고정한 후, Y인자의 산포를 설명하는 X2인자를 탐색하는 방법으로 분석을 수행함</li>
    <li>다변량 분석: 다양한 인자들이 Y인자에 영향을 끼치는 경우, 다변량 분석이 용이함<br />
  적합한 모델을 선정하고 모델링을 통해 분석을 수행함</li>
  </ul>
</blockquote>

<p>  또 하나 깨달은 것은 <strong>상황에 맞게 적합한 분석 방법을 적용해야 한다는 것</strong>이었다. 너무 당연한 얘기이려나? 그래도 단순히 알고 있는 것과 경험해보는 것은 다르기에 개인적으로도 아주 유익한 2주였다. 간만에 재밌었고 보람찬 분석이었다. 이런거 보면 모델링이 더 적성에 맞을지도..??ㅎㅎ</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Memoir" /><summary type="html"><![CDATA[  지난 2주는 에너지 사용량 증감 원인 분석하고 그 결과를 문서화 하느라 정신 없이 지나갔네요. 월간 보고회를 진행하기 위해 쳇바퀴 처럼 반복되는 매월이지만 최근 꽤나 재미있는 분석을 진행했습니다. 이번에는 분석 모델링을 통해서 Y인자의 변동을 설명하고자 하였고 흥미로운 결과가 나와서 기록하고자 합니다.]]></summary></entry><entry><title type="html">[SQL] LeetCode 풀이: Basic Joins(2/2)</title><link href="http://localhost:4000/data/SQL_LeetCode3_Join2/" rel="alternate" type="text/html" title="[SQL] LeetCode 풀이: Basic Joins(2/2)" /><published>2023-07-01T00:00:00+09:00</published><updated>2023-06-30T07:07:00+09:00</updated><id>http://localhost:4000/data/SQL_LeetCode3_Join2</id><content type="html" xml:base="http://localhost:4000/data/SQL_LeetCode3_Join2/"><![CDATA[<p>  안녕하세요. LeetCode50 Basic Join 이어 가겠습니다.</p>

<h1 id="2-basic-joins">2. Basic Joins</h1>
<h2 id="25-average-time-of-process-per-machine">2.5 Average Time of Process per Machine</h2>
<h3 id="251-table-description--question">2.5.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Activity</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>machine_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>process_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>activity_type(PK)</td>
      <td>enum</td>
    </tr>
    <tr>
      <td>timestamp</td>
      <td>float</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>The table shows the user activities for a factory website.<br />
machine_id is the ID of a machine.
process_id is the ID of a process running on the machine with ID machine_id.
activity_type is an ENUM of type (‘start’, ‘end’).
timestamp is a float representing the current time in seconds.
‘start’ means the machine starts the process at the given timestamp and ‘end’ means the machine ends the process at the given timestamp.
The ‘start’ timestamp will always be before the ‘end’ timestamp for every (machine_id, process_id) pair.<br /></p>
</blockquote>

<p><strong>Question</strong><br /></p>
<ul>
  <li>There is a factory website that has several machines each running the same number of processes. Write an SQL query to find the average time each machine takes to complete a process.<br /></li>
  <li>The time to complete a process is the ‘end’ timestamp minus the ‘start’ timestamp. The average time is calculated by the total time to complete every process on the machine divided by the number of processes that were run.<br /></li>
  <li>The resulting table should have the machine_id along with the average time as processing_time, which should be rounded to 3 decimal places.</li>
</ul>

<p>Return the result table in any order.</p>

<h3 id="252-solution">2.5.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">machine_id</span><span class="p">,</span>
    <span class="n">Round</span><span class="p">(</span><span class="k">Avg</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="nb">timestamp</span> <span class="o">-</span> <span class="n">a</span><span class="p">.</span><span class="nb">timestamp</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>      <span class="k">As</span> <span class="n">processing_time</span>
<span class="k">FROM</span> 
    <span class="n">Activity</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Activity</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">machine_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">machine_id</span> <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="n">process_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">process_id</span>
<span class="k">Where</span>
    <span class="n">a</span><span class="p">.</span><span class="n">activity_type</span> <span class="o">=</span> <span class="s1">'start'</span> <span class="k">and</span>
    <span class="n">b</span><span class="p">.</span><span class="n">activity_type</span> <span class="o">=</span> <span class="s1">'end'</span> 
    <span class="k">and</span> <span class="n">a</span><span class="p">.</span><span class="nb">timestamp</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">.</span><span class="nb">timestamp</span> <span class="c1">-- end timestamp가 start timestamp 보다 이후여야 한다는 제약이 필요함</span>
<span class="k">Group</span> <span class="k">by</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">machine_id</span>
</code></pre></div></div>
<p>  Self Table Join이다. 문제에서 processing time = endtime - starttime으로 정의하고 있다. 따라서, machind_id 별로 endtime과 starttime 간 차이를 구할 수 있게 두 컬럼을 붙여주면 된다. JOIN을 수행할 a 테이블은 ‘start’인 timestamp만을 가져오고, b 테이블은 ‘end’인 timestamp만을 가져와서 join을 수행하여 processing time을 구하면 된다.<br />
<br />
  문제에 보면 machine_id, process_id 별 end timestamp가 start timestamp가 이후여야 한다. 문제 풀 때는 까먹어서 SQL 구문에 넣지 않았지만, 실무에서는 매우 중요하다. 실제로는 데이터의 무결성(Data Integrity)가 지켜지지 않는 경우가 많기 때문에, 정확한 데이터를 산출하기 위해서는 위와 같은 조건을 꼭 추가하여야 한다.</p>

<h3 id="253-good-to-know">2.5.3 Good to Know</h3>
<p>Round함수는 지정한 자릿수에 따라 반올림을 수행하는 함수이다. 만약 지정한 자릿수가 ‘3’이라면 소수점 넷째 자리에서 반올림하여 셋째자리까지 표시해준다.</p>

<h2 id="26-employee-bonus">2.6 Employee Bonus</h2>
<h3 id="261-table-description--question">2.6.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Employee</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>empId(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>supervisor</td>
      <td>int</td>
    </tr>
    <tr>
      <td>salary</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>(sale_id, year) is the primary key of this table.<br />
Each row of this table indicates the name and the ID of an employee in addition to their salary and the id of their manager.<br /></p>
</blockquote>

<p>table: Bonus</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>empId(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>bonus(FK)</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>empId is a foreign key to empId from the Employee table.<br />
Each row of this table contains the id of an employee and their respective bonus.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query to report the name and bonus amount of each employee with a bonus less than 1000.<br />
Return the result table in any order.</p>

<h3 id="252-solution-1">2.5.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">name</span><span class="p">,</span>
    <span class="n">b</span><span class="p">.</span><span class="n">bonus</span>
<span class="k">FROM</span> 
    <span class="n">Employee</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Bonus</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">empId</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">empId</span>
<span class="k">Where</span> 
    <span class="n">b</span><span class="p">.</span><span class="n">bonus</span> <span class="o">&lt;</span> <span class="mi">1000</span> <span class="k">or</span> <span class="k">isnull</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">bonus</span><span class="p">)</span>
</code></pre></div></div>
<p>위 문제와 마찬가지로 간단한 Join이라 부가설명 없이 넘어가도록 한다.</p>

<h2 id="27-students-and-examinations">2.7 Students and Examinations</h2>
<h3 id="271-table-description--question">2.7.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Students</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>student_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>student_name</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table contains the ID and the name of one student in the school.</p>
</blockquote>

<p>table: Subjects</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>subject_name(PK)</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table contains the name of one subject in the school.</p>
</blockquote>

<p>table: Examinations</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>student_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>subject_name</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>There is no primary key for this table. <u>It may contain duplicates.</u><br />
Each student from the Students table takes every course from the Subjects table.
Each row of this table indicates that a student with ID student_id attended the exam of subject_name.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write an SQL query to find the number of times each student attended each exam.<br />
Return the result table ordered by student_id and subject_name.</p>

<h3 id="272-solution">2.7.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">student_id</span><span class="p">,</span>
    <span class="n">a</span><span class="p">.</span><span class="n">student_name</span><span class="p">,</span>
    <span class="n">b</span><span class="p">.</span><span class="n">subject_name</span><span class="p">,</span>
    <span class="k">Count</span><span class="p">(</span><span class="k">c</span><span class="p">.</span><span class="n">subject_name</span><span class="p">)</span>           <span class="k">As</span> <span class="n">attended_exams</span>
<span class="k">From</span>
    <span class="n">Students</span> <span class="n">a</span>
<span class="k">Cross</span> <span class="k">Join</span> 
    <span class="n">Subjects</span> <span class="n">b</span> 
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Examinations</span> <span class="k">c</span> <span class="k">on</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">student_id</span> <span class="o">=</span> <span class="k">c</span><span class="p">.</span><span class="n">student_id</span> <span class="k">and</span> <span class="n">b</span><span class="p">.</span><span class="n">subject_name</span> <span class="o">=</span> <span class="k">c</span><span class="p">.</span><span class="n">subject_name</span>
<span class="k">Group</span> <span class="k">By</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">student_id</span><span class="p">,</span> <span class="n">b</span><span class="p">.</span><span class="n">subject_name</span>
<span class="k">Order</span> <span class="k">By</span>
     <span class="n">a</span><span class="p">.</span><span class="n">student_id</span> <span class="k">asc</span><span class="p">,</span> <span class="n">b</span><span class="p">.</span><span class="n">subject_name</span> <span class="k">asc</span>
<span class="p">;</span>
</code></pre></div></div>
<p> 문제에서 요구하는 답을 얻기 위해서는 3개의 테이블을 Join해야 한다. 학생별로 수강한 과목명을 붙이고 그 과목에 시험 응시한 과목을 붙여야 한다. students 테이블의 모든 학생들은 subjects에 있는 모든 과목을 수강했다고 한다. 그렇다면 students테이블의 students_id 별로 과목명을 모두 붙여주면 된다. 이럴때 사용하는 JOIN은 <strong>OUTER JOIN</strong>이며, MySQL에선 ‘CROSS JOIN’으로 수행한다. CROSS JOIN은 각 테이블의 키별로 모든 값을 매칭하는 JOIN 방법이다. 수행 결과로 students_id 별로 모든 subjects name이 JOIN된다.<br />
<br />
  다음으로 students id 별로 시험 응시 내역을 붙여주면 된다. 기존 Cross Join을 수행한 테이블에 Examination을 Left Join 해주자. 그러면 시험을 응시했으면 값이 붙고 없으면 Null값이 붙는다. 따라서 c.subject name을 count해주면 시험 응시 횟수를 구할 수 있게 된다.(null값은 count하지 않는다.)</p>

<h3 id="273-good-to-know">2.7.3 Good to Know</h3>
<p>  실무에서 데이터 마트를 구성하다보면 대부분의 트러블은 대부분 테이블 간 JOIN에서 발생한다. 그 이유는 1) Key가 잘못(중복, 데이터 타입 상이 등)됐거나, 2) Join에 종류를 잘못설정 했거나, 3) 기타 모종의 이유… 등으로 발생한다. 특히, Key에 중복이 발생되거나, Outer Join을 잘못 수행할 경우 데이터가 뻥튀기 되면서 컴퓨팅 리소스 한계 이상으로 사용하게 되면서 서버가 맛탱이가는 일이 발생하고 서비스를 내리거나 엔진을 재시작하는 일이 발생한다. 따라서, Join은 항상 신중하게 해야 한다.</p>
<blockquote>
  <p>JOIN 수행 전 KEY가 적절한 지, 데이터 중복 여부 정도는 미리 체크하기!</p>
</blockquote>

<h2 id="28-managers-with-at-least-5-direct-reports">2.8 Managers with at Least 5 Direct Reports</h2>
<h3 id="281-table-descriptoin--question">2.8.1 Table descriptoin &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Employee</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>department</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>managerId</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row of this table indicates the name of an employee, their department, and the id of their manager. If managerId is null, then the employee does not have a manager. No employee will be the manager of themself.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write an SQL query to report the managers with at least five direct reports.<br />
Return the result table in any order.</p>

<h3 id="282-solution">2.8.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">name</span>
<span class="k">FROM</span> 
    <span class="n">Employee</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span>
    <span class="p">(</span><span class="k">SELECT</span>
        <span class="n">managerId</span><span class="p">,</span>
        <span class="k">count</span><span class="p">(</span><span class="n">id</span><span class="p">)</span>   <span class="k">as</span> <span class="n">n</span>
    <span class="k">FROM</span>
        <span class="n">Employee</span>
    <span class="k">Group</span> <span class="k">By</span> 
        <span class="n">managerId</span><span class="p">)</span>
    <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">managerId</span>
<span class="k">WHERE</span>
    <span class="n">b</span><span class="p">.</span><span class="n">n</span> <span class="o">&gt;=</span> <span class="mi">5</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  maneger id 별로 id가 몇 명인지 구한다음 값이 5 이상인 manager id를 구하면 되는 문제이다. 처음에 문제를 보고 어떻게 풀어야 할지 감이 안와서 subquery를 활용했다. 개인적으로는 Simple하게 가장 좋다고 생각하기에 굳이 subquery를 써야하는 상황이 아니면 쓰고 싶지 않았다. (현 수준 문제에서 subquery를 요구하는 거 같진 않았다.) 하지만, 다른 아이디어가 없었기에 subquery로 manager id 별로 id 수를 구한 다음 left join하여 값이 5이상인 manager를 추출하였다.<br /><br /></p>

<p><strong>Better Solution</strong><br /></p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">name</span>
<span class="k">FROM</span> 
    <span class="n">Employee</span> <span class="n">a</span>
<span class="k">INNER</span> <span class="k">JOIN</span> 
    <span class="n">Employee</span> <span class="n">b</span>
    <span class="k">ON</span> <span class="n">a</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">managerId</span>
<span class="k">GROUP</span> <span class="k">BY</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">name</span>
<span class="k">HAVING</span> 
    <span class="k">COUNT</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">name</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">5</span><span class="p">;</span>
</code></pre></div></div>
<p>  문제를 풀고 다른 사람의 solutions 중 개인적으로 가장 깔끔하다고 생각하여 가져왔다. 그리고 Having 절에 대해 처음 알게 됐다.(이전에는 몰랐다 ㅠㅠ)
SQL 코드도 짧아졌고 기존 코드보다 직관적으로 이해도 쉽다.</p>

<h3 id="283-good-to-know-where-vs-having">2.8.3 Good to Know: Where vs. Having</h3>
<p>  Where 절과 Having 절은 둘 다 필터링할 때 사용할 수 있다는 공통적인 기능을 제공하지만 차이가 있다. Having 절은 그룹을 필터링하는 데 쓰이며, 집계 함수를 사용하여 필터링이 가능한 반면, Where 절은 개별 행에 대한 필터링이 가능하며 집계 함수를 활용한 필터링이 불가능하다. 즉, Having은 그룹화 혹은 집계 값에 대한 레코드를 필터링하는데 사용되며, Where 절은 개별값에 대한 레코드를 필터링하는데 사용된다.<br />
<br />
<a href="https://velog.io/@ljs7463/SQL-having-%EA%B3%BC-where-%EC%B0%A8%EC%9D%B4">참조사이트</a>: Having 절에 대한 내용은 해당 블로그에서 참조하였습니다.</p>

<h2 id="29-confirmation-rate">2.9 Confirmation Rate</h2>
<h3 id="291-table-descriptoin--question">2.9.1 Table descriptoin &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Signups</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>user_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>time_stamp</td>
      <td>datetime</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Each row contains information about the signup time for the user with ID user_id.</p>
</blockquote>

<p>table: Confirmations</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>user_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>time_stamp(PK)</td>
      <td>datetime</td>
    </tr>
    <tr>
      <td>action</td>
      <td>ENUM</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>user_id is a foreign key with a reference to the Signups table.
action is an ENUM of the type (‘confirmed’, ‘timeout’)
Each row of this table indicates that the user with ID user_id requested a confirmation message at time_stamp and that confirmation message was either confirmed (‘confirmed’) or expired without confirming (‘timeout’).</p>
</blockquote>

<p><strong>Question</strong> <br />
The confirmation rate of a user is the number of ‘confirmed’ messages divided by the total number of requested confirmation messages. The confirmation rate of a user that did not request any confirmation messages is 0. Round the confirmation rate to two decimal places.<br />
Write an SQL query to find the confirmation rate of each user.<br />
Return the result table in any order.</p>

<h3 id="292-solution">2.9.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
   <span class="n">a</span><span class="p">.</span><span class="n">user_id</span><span class="p">,</span>
   <span class="n">round</span><span class="p">(</span><span class="n">Coalesce</span><span class="p">(</span><span class="k">count</span><span class="p">(</span><span class="k">case</span> <span class="k">when</span> <span class="n">b</span><span class="p">.</span><span class="n">action</span><span class="o">=</span><span class="s1">'confirmed'</span> <span class="k">then</span> <span class="mi">1</span> <span class="k">end</span><span class="p">)</span> <span class="o">/</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">),</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
       <span class="k">as</span> <span class="n">confirmation_rate</span>
<span class="k">FROM</span>
   <span class="n">Signups</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span>
   <span class="n">Confirmations</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">user_id</span>
<span class="k">Group</span> <span class="k">by</span>
   <span class="n">a</span><span class="p">.</span><span class="n">user_id</span>
<span class="p">;</span>
</code></pre></div></div>
<p>  confirmation rate을 구하기 위해서는 confirmed 수와 total 수를 구해야 한다. 그래서 case 절을 사용해서 confirmed 수를 구했고 count(*)를 활용해 total 수를 구했다. 근데 굳이 각각 수를 더해서 나눠줄 필요없이 avg 함수를 활용해서 confirmation rate을 구할 수 있다.<br /></p>

<p><code class="language-plaintext highlighter-rouge">avg(case when c.action = 'confirmed' then 1 else 0 end)</code>, 이 방법도 깔끔하고 좋은 것 같다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="SQL" /><category term="LeetCode" /><summary type="html"><![CDATA[  안녕하세요. LeetCode50 Basic Join 이어 가겠습니다.]]></summary></entry><entry><title type="html">[SQL] LeetCode 풀이: Basic Joins</title><link href="http://localhost:4000/data/SQL_LeetCode2/" rel="alternate" type="text/html" title="[SQL] LeetCode 풀이: Basic Joins" /><published>2023-06-29T00:00:00+09:00</published><updated>2023-06-30T07:07:00+09:00</updated><id>http://localhost:4000/data/SQL_LeetCode2</id><content type="html" xml:base="http://localhost:4000/data/SQL_LeetCode2/"><![CDATA[<p>  안녕하세요. LeetCode SQL50 두번째 파트인 Basic Joins입니다. Join은 2개 이상의 테이블을 Key를 활용해 하나로 합치는 기능입니다. Join의 방법은 left, inner, outer 등이 있으며 굉장히 많이 활용되는 기능입니다.</p>

<h1 id="2-basic-joins">2. Basic Joins</h1>
<h2 id="21-replace-employee-id-with-the-unique-identifier">2.1 Replace Employee ID With The Unique Identifier</h2>
<h3 id="211-table-description--question">2.1.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Employees</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>id is the primary key for this table.<br />
Each row of this table contains the id and the name of an employee in a company.<br /></p>
</blockquote>

<p>table: EmployeeUNI</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>unique_id</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>(id, unique_id) is the primary key for this table.<br />
Each row of this table contains the id and the corresponding unique id of an employee in the company.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query to show the unique ID of each user, If a user does not have a unique ID replace just show null.<br />
Return the result table in any order.</p>
<h3 id="212-solution">2.1.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">b</span><span class="p">.</span><span class="n">unique_id</span>     <span class="k">as</span> <span class="n">unique_id</span><span class="p">,</span>
    <span class="n">a</span><span class="p">.</span><span class="n">name</span>          <span class="k">as</span> <span class="n">name</span>
<span class="k">FROM</span>
    <span class="n">Employees</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">EmployeeUNI</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">id</span>
</code></pre></div></div>

<p>user_id를 key로 Empolyee테이블에 EmployeeUNI테이블의 unique_id를 붙이면 되는 아주 간단한 문제이다.</p>

<h3 id="213-good-to-know">2.1.3 Good to Know</h3>
<p>Left Join 할 때, 매칭되는 값이 없는 경우에는 null로 붙는다.</p>

<h2 id="22-product-sales-analysis-i">2.2 Product Sales Analysis I</h2>
<h3 id="221-table-description--question">2.2.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Sales</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>sale_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>product_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>year</td>
      <td>int</td>
    </tr>
    <tr>
      <td>quantity</td>
      <td>int</td>
    </tr>
    <tr>
      <td>price</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>(sale_id, year) is the primary key of this table.<br />
product_id is a foreign key to Product table.<br />
Each row of this table shows a sale on the product product_id in a certain year.<br />
Note that the price is per unit.</p>
</blockquote>

<p>table: Product</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>product_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>product_name</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>product_id is the primary key of this table.<br />
Each row of this table indicates the product name of each product.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query that reports the product_name, year, and price for each sale_id in the Sales table.<br />
Return the result table in any order.</p>

<h3 id="222-solution">2.2.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="nb">year</span>              <span class="k">as</span> <span class="nb">year</span><span class="p">,</span>
    <span class="n">a</span><span class="p">.</span><span class="n">price</span>             <span class="k">as</span> <span class="n">price</span><span class="p">,</span>
    <span class="n">b</span><span class="p">.</span><span class="n">product_name</span>      <span class="k">as</span> <span class="n">product_name</span>
<span class="k">FROM</span> 
    <span class="n">Sales</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Product</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">product_id</span>
</code></pre></div></div>
<p>위 문제와 마찬가지로 간단한 Join이라 부가설명 없이 넘어가도록 한다.</p>

<h2 id="23-customer-who-visited-but-did-not-make-any-transactions">2.3 Customer Who Visited but Did Not Make Any Transactions</h2>
<h3 id="231-table-description--question">2.3.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Visits</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>visit_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>customer_id</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>This table contains information about the customers who visited the mall.</p>
</blockquote>

<p>table: Transactions</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>transaction_id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>visit_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>amount</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>This table contains information about the transactions made during the visit_id.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write a SQL query to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.</p>

<h3 id="232-solution">2.3.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">customer_id</span>            <span class="k">as</span> <span class="n">customer_id</span><span class="p">,</span>
    <span class="k">Count</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">customer_id</span><span class="p">)</span>     <span class="k">as</span> <span class="n">count_no_trans</span>
<span class="k">FROM</span> 
    <span class="n">Visits</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Transactions</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">visit_id</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">visit_id</span>
<span class="k">WHERE</span>
    <span class="k">isnull</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">visit_id</span><span class="p">)</span>
<span class="k">GROUP</span> <span class="k">By</span> 
    <span class="n">a</span><span class="p">.</span><span class="n">customer_id</span>
</code></pre></div></div>
<p>Join 하는 경우에도 WHERE 절이나 Group By를 통한 집계도 가능하다!</p>

<h2 id="24-rising-temperature">2.4 Rising Temperature</h2>
<h3 id="241-table-descriptoin--question">2.4.1 Table descriptoin &amp; Question</h3>
<p><strong>Table</strong> description</p>

<p>table: Weather</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id(PK)</td>
      <td>int</td>
    </tr>
    <tr>
      <td>recordDate</td>
      <td>date</td>
    </tr>
    <tr>
      <td>temperature</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>This table contains information about the temperature on a certain day.</p>
</blockquote>

<p><strong>Question</strong> <br />
Write an SQL query to find all dates’ Id with higher temperatures compared to its previous dates (yesterday).<br />
Return the result table sorted by id in ascending order.</p>

<h3 id="242-solution">2.4.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">a</span><span class="p">.</span><span class="n">id</span>
<span class="k">FROM</span> 
    <span class="n">Weather</span> <span class="n">a</span>
<span class="k">Left</span> <span class="k">Join</span> 
    <span class="n">Weather</span> <span class="n">b</span> <span class="k">on</span> <span class="n">a</span><span class="p">.</span><span class="n">recordDate</span> <span class="o">=</span> <span class="n">DATE_ADD</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">recordDate</span><span class="p">,</span> <span class="n">Interval</span> <span class="mi">1</span> <span class="k">DAY</span><span class="p">)</span>
<span class="k">Where</span>
    <span class="n">a</span><span class="p">.</span><span class="n">temperature</span> <span class="o">&gt;</span> <span class="n">b</span><span class="p">.</span><span class="n">temperature</span>
</code></pre></div></div>
<p>동일 테이블에 Join하는 self table join이며, 어제보다 오늘 기온이 높은 날을 찾아야 한다. 그러기 위해선 오늘 온도와 어제 온도를 비교할 수 있어야 한다. 기본 아이디어는 어제 날짜를 마치 오늘인 것처럼 변환해서 Join하는 것이다. 위 SQL 구문에서 Key 부분을 풀어서 설명하자면, b 테이블 날짜에서 하루를 더해준 날짜와 a 테이블 날짜를 Join 하게 되면 a 테이블 입장에서 전날 데이터가 Join 되게 된다. 예를 들어, ‘2023년 6월 28일’에서 하루 더해주면 ‘2023년 6월 29일’이 되고 이를 기존 테이블에 Join 했을 때, ‘2023년 6월 29일’에 28일 데이터가 붙게 된다. 처음 문제를 보고 막막했는데 아이디어만 잘 낸다면 어렵지 않게 풀 수 있다.</p>

<h3 id="143-good-to-know">1.4.3 Good to Know</h3>
<p><code class="language-plaintext highlighter-rouge">DATE_ADD</code> 함수는 기준 날짜에 지정한 값만큼 더해주는 시간 함수이다. 첫번째 인수로는 기준 시간을 입력하고, 두번째 인수로 원하는 단위를 입력하면 된다. ‘Interval 1 DAY’는 하루만큼 더하라는 의미이며, second, month, year 등 다양한 인수를 넣어줄 수 있다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="SQL" /><category term="LeetCode" /><summary type="html"><![CDATA[  안녕하세요. LeetCode SQL50 두번째 파트인 Basic Joins입니다. Join은 2개 이상의 테이블을 Key를 활용해 하나로 합치는 기능입니다. Join의 방법은 left, inner, outer 등이 있으며 굉장히 많이 활용되는 기능입니다.]]></summary></entry><entry><title type="html">[SQL] LeetCode 풀이</title><link href="http://localhost:4000/data/SQL_LeetCode1/" rel="alternate" type="text/html" title="[SQL] LeetCode 풀이" /><published>2023-06-18T00:00:00+09:00</published><updated>2023-06-19T02:56:00+09:00</updated><id>http://localhost:4000/data/SQL_LeetCode1</id><content type="html" xml:base="http://localhost:4000/data/SQL_LeetCode1/"><![CDATA[<p>  안녕하세요. 데이터 분석가에게 SQL 활용 능력은 필수적이라 생각됩니다. 웬만한 데이터 분석가 JD 요구사항에 SQL 활용능력이 없는 경우는 없더군요. 저도 데이터 분석가 업무를 하면서 실무에서 유사(?) SQL을 활용해 데이터 마트를 만들지만 내가 SQL을 제대로 다루고 있는지 항상 의문이 따라왔습니다. 게다가 제 SQL 활용 능력이 어느정도인지 궁금하기도 했습니다. 따라서 실무 외에 SQL을 제대로 한 번 공부해보고 싶었고, 그 중 하나로 웹에 SQL 문제를 풀어보기로 했습니다. 구글링을 해보니 SQL 문제를 제공하는 여러 사이트가 나왔고, 그 중에서 LeetCode가 50문제 정도를 무료로 제공하길래 시작으로 괜찮다 싶어서 정했습니다! 리트코드 50문제를 풀어보고 문제별로 Solution을 이 블로그에 정리하고자 합니다.</p>

<h1 id="1-select">1. Select</h1>
<p>  첫 Section은 Select로 아주 기본적인 SQL 문을 활용해 풀 수 있는 문제들이었다.</p>
<h2 id="11-recyclable-and-low-fat-products">1.1 Recyclable and Low Fat Products</h2>
<h3 id="111-table-description--question">1.1.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Product_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>low fats</td>
      <td>enum</td>
    </tr>
    <tr>
      <td>recyclable</td>
      <td>enum</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>table name is “PRODUCTS”<br />
product_id is the primary key for this table. <br />
low_fats is an ENUM of type (‘Y’, ‘N’) where ‘Y’ means this product is low fat and ‘N’ means it is not.<br />
recyclable is an ENUM of types (‘Y’, ‘N’) where ‘Y’ means this product is recyclable and ‘N’ means it is not.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query to find the ids of products that are both low fat and recyclable.<br />
Return the result table in any order.</p>
<h3 id="112-solution">1.1.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">product_id</span>
<span class="k">FROM</span> 
    <span class="n">PRODUCTS</span>
<span class="k">WHERE</span> 
    <span class="n">low_fats</span> <span class="o">=</span> <span class="s1">'Y'</span> <span class="k">and</span> <span class="n">recyclable</span> <span class="o">=</span> <span class="s1">'Y'</span>
</code></pre></div></div>

<p>문제가 요구하는 것은 low fat이고 재활용 가능한 제품명을 추출해 보여달라는 것이다. low fat &amp; recyclable한 제품만을 추출하기 위해 조건절을 추가해주면 된다. WHERE 조건절도 각각 본인 스타일에 맞게 쓰면 된다. 하나의 정답만 있는 것은 아니다.</p>

<h3 id="113-good-to-know">1.1.3 Good to Know</h3>
<p>Enum 타입 데이터는 Character형 데이터 타입이며, 해당 Column에 할당할 수 있는 값들을 지정해 줄 수 있다. 해당 데이터 칼럼에 값들을 제약할 수 있는 기능을 재공해준다(데이터 정합성 확보에 유리함). Enum 타입 데이터 칼럼은 값과 index 모두 활용하여 값을 불러올 수 있다. <br />
다만, Enum 타입에 새로운 데이터를 추가할 때 번거로움이 있으며 정렬이나 연산 시 불리하다는 의견도 있는 것 같다. 추가로 Enum 타입 데이터를 지원하지 않는 DBMS로의 이식이 어려울 수 있을 것 같다. 따라서 굳이 Enum 타입 데이터를 활용하기 보다는 참조 테이블을 활용하는 것이 좋을 수 있다.</p>

<h2 id="12-find-customer-referee">1.2 Find Customer Referee</h2>
<h3 id="121-table-description--question">1.2.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<table>
  <thead>
    <tr>
      <th>Colum Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>refree_id</td>
      <td>int</td>
    </tr>
  </tbody>
</table>

<p><strong>Input:</strong><br />
Customer table:<br /></p>

<table>
  <thead>
    <tr>
      <th>id</th>
      <th>name</th>
      <th>referee_id</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Will</td>
      <td>null</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Jane</td>
      <td>null</td>
    </tr>
    <tr>
      <td>3</td>
      <td>Alex</td>
      <td>2</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Bill</td>
      <td>null</td>
    </tr>
    <tr>
      <td>5</td>
      <td>Zack</td>
      <td>1</td>
    </tr>
    <tr>
      <td>6</td>
      <td>Mark</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>table name is “Customer”<br />
Each row of this table indicates the id of a customer, their name, and the id of the customer who referred them.</p>
</blockquote>

<p><strong>Question</strong><br />
Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.
Return the result table in any order.</p>

<h3 id="122-solution">1.2.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
  <span class="n">name</span>
<span class="k">FROM</span>
  <span class="n">Customer</span>
<span class="k">WHERE</span>
  <span class="n">referee_id</span> <span class="o">!=</span> <span class="mi">2</span> <span class="k">or</span> <span class="k">isnull</span><span class="p">(</span><span class="n">referee_id</span><span class="p">)</span>
</code></pre></div></div>

<p>input Table을 보면 refree_id에 null값이 포함되어 있다. 만약 Where 조건절에 refree_id != 2 조건만 있으면 refree_id가 null인 값을 제외시켜 버리기 때문에, refree_id가 null인 record를 불러오기 위해 조건을 추가해야 한다. 따라서 refree_id != 2 or isnull(refree_id)로 조건절을 줘야 refree_id가 2인 record를 제외한 모든 record를 불러오게 된다.</p>

<h3 id="133-good-to-know">1.3.3 Good to Know</h3>
<p>다른 사람이 올린 Solution 중, null값을 처리하는 다양한 방법이 있길래 알아두면 좋을 것 같아 기록하고자 한다.</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">refree_id</span> <span class="k">IS</span> <span class="k">NULL</span>
<span class="n">Coalesce</span><span class="p">(</span><span class="n">refree_id</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span> <span class="p">(</span><span class="k">or</span> <span class="o">&lt;&gt;</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>
<p>isnull() 등 함수를 활용하여 null값을 처리하는게 익숙하다보니 함수로 처리했는데, 함수를 쓰지 않아도 “IS Null” 구문으로 처리가 가능하다. 직관적으로 이해하기 쉽다. <br />
coalesce 함수는 보통 Null값이 있는 데이터 컬럼을 처리할 때 종종 사용하는 함수이다. 첫 번째 인수로 들어가 있는 컬럼의 값이 Null인 경우 두 번째 인수의 값을 할당하고 두 번째 인수의 값도 Null인 경우 그 다음 인수의 값을 할당해주는 식의 함수이다. 위의 코드를 해석하면 refree_id가 null인 경우에 0을 할당해주고 그 값이 2가 아닌 경우를 판별하는 조건문이다. If 문을 활용하는 것보다 훨씬 깔끔하다 ㅎㅎ</p>

<h2 id="13-big-countries">1.3 Big Countries</h2>
<h3 id="131-table-description--question">1.3.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>name</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>continent</td>
      <td>varchar</td>
    </tr>
    <tr>
      <td>area</td>
      <td>int</td>
    </tr>
    <tr>
      <td>population</td>
      <td>int</td>
    </tr>
    <tr>
      <td>gdp</td>
      <td>bigint</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>name is the primary key column for this table.<br />
Each row of this table gives information about the name of a country, the continent to which it belongs, its area, the population, and its GDP value.</p>
</blockquote>

<p><strong>Input:</strong><br />
Customer table:<br /></p>

<table>
  <thead>
    <tr>
      <th>name</th>
      <th>continent</th>
      <th>area</th>
      <th>population</th>
      <th>gdp</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Afghanistan</td>
      <td>Asia</td>
      <td>652230</td>
      <td>25500100</td>
      <td>20343000000</td>
    </tr>
    <tr>
      <td>Albania</td>
      <td>Europe</td>
      <td>28748</td>
      <td>2831741</td>
      <td>12960000000</td>
    </tr>
    <tr>
      <td>Algeria</td>
      <td>Africa</td>
      <td>2381741</td>
      <td>37100000</td>
      <td>188681000000</td>
    </tr>
    <tr>
      <td>Andorra</td>
      <td>Europe</td>
      <td>468</td>
      <td>78115</td>
      <td>3712000000</td>
    </tr>
    <tr>
      <td>Angola</td>
      <td>Africa</td>
      <td>1246700</td>
      <td>20609294</td>
      <td>100990000000</td>
    </tr>
  </tbody>
</table>

<p><strong>Question</strong> <br />
A country is big if:</p>

<ul>
  <li>it has an area of at least three million (i.e., 3000000 km2), or</li>
  <li>it has a population of at least twenty-five million (i.e., 25000000).</li>
</ul>

<p>Write an SQL query to report the name, population, and area of the big countries.<br />
big 조건에 부합하는 국가의 국가명, 인구, 면적을 report하면 된다.</p>

<h3 id="132-solution">1.3.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
  <span class="n">name</span><span class="p">,</span>
  <span class="n">population</span><span class="p">,</span>
  <span class="n">area</span>
<span class="k">FROM</span> 
  <span class="n">World</span>
<span class="k">WHERE</span>
  <span class="n">area</span> <span class="o">&gt;=</span> <span class="mi">3000000</span> <span class="k">or</span> <span class="n">population</span> <span class="o">&gt;=</span> <span class="mi">25000000</span>
</code></pre></div></div>
<p>간단한 문제이므로 추가설명은 하지 않도록 하겠다.</p>

<h2 id="14-article-views-i">1.4 Article Views I</h2>
<h3 id="141-table-descriptoin--question">1.4.1 Table descriptoin &amp; Question</h3>
<p><strong>Table</strong> description</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>article_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>author_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>viewer_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>view_date</td>
      <td>date</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>There is no primary key for this table, it may have <strong>duplicate rows.</strong> <br />
Each row of this table indicates that some viewer viewed an article (written by some author) on some date. <br />
Note that <strong>equal author_id and viewer_id indicate the same person.</strong></p>
</blockquote>

<p>주의해야 할 점은 데이터가 중복인 row가 있다는 것과 author_id와 viewer_id가 값이 같다면 동일인물이라는 것이다.</p>

<p><strong>Input:</strong><br />
Customer table:<br /></p>

<table>
  <thead>
    <tr>
      <th>article_id</th>
      <th>author_id</th>
      <th>viewer_id</th>
      <th>view_date</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>2019-08-01</td>
    </tr>
    <tr>
      <td>1</td>
      <td>3</td>
      <td>6</td>
      <td>2019-08-02</td>
    </tr>
    <tr>
      <td>2</td>
      <td>7</td>
      <td>7</td>
      <td>2019-08-01</td>
    </tr>
    <tr>
      <td>2</td>
      <td>7</td>
      <td>6</td>
      <td>2019-08-02</td>
    </tr>
    <tr>
      <td>4</td>
      <td>7</td>
      <td>1</td>
      <td>2019-07-22</td>
    </tr>
    <tr>
      <td>3</td>
      <td>4</td>
      <td>4</td>
      <td>2019-07-21</td>
    </tr>
    <tr>
      <td>3</td>
      <td>4</td>
      <td>4</td>
      <td>2019-07-21</td>
    </tr>
  </tbody>
</table>

<p><strong>Question</strong> <br />
Write an SQL query to find all the authors that viewed at least one of their own articles.<br />
Return the result table sorted by id in ascending order.</p>

<h3 id="142-solution">1.4.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">DISTINCT</span>
    <span class="n">author_id</span> <span class="k">as</span> <span class="n">id</span>
<span class="k">FROM</span>
    <span class="n">Views</span>
<span class="k">WHERE</span>
    <span class="n">author_id</span> <span class="o">=</span> <span class="n">viewer_id</span>
<span class="k">ORDER</span> <span class="k">BY</span>
    <span class="n">id</span> <span class="k">asc</span>
</code></pre></div></div>
<p>중복값을 처리하기 위해 SELECT 문 뒤에 DISTINCT를 추가했다. 실무에서도 Table을 로드할 때, 습관적으로 Distinct를 붙여주곤 한다. 특히, 여러 테이블을 Join할 때, 중복값이 있는 경우 결과값이 뻥튀기 되어 컴퓨팅 리소스를 한계 이상으로 활용하여 다운될 수 있는 위험이 있기 때문이다. 물론 중복이 애초에 안생기게 하는 것이 최선이지만 혹시 모를 사고를 미연에 방지하기 위한 습관이다.</p>

<h3 id="143-good-to-know">1.4.3 Good to Know</h3>
<p>SQL린이 시절, 오름차순 내림차순이 항상 헷갈렸다. 이제는 헷갈릴 일이 없긴 하지만, 오름차순은 낮은 값부터 높은 값 순으로 정렬하는 거고 영어로 보통 <code class="language-plaintext highlighter-rouge">asc or ascending</code>로 표기한다. 내림차순은 반대이며 보통 <code class="language-plaintext highlighter-rouge">desc or descending</code>으로 표기한다.</p>

<h2 id="15-invalid-tweets">1.5 Invalid Tweets</h2>
<h3 id="151-table-description--question">1.5.1 Table Description &amp; Question</h3>
<p><strong>Table</strong> description</p>

<table>
  <thead>
    <tr>
      <th>Column Name</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>tweet_id</td>
      <td>int</td>
    </tr>
    <tr>
      <td>content</td>
      <td>varchar</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>tweet_id is the primary key for this table.<br />
This table contains all the tweets in a social media app.</p>
</blockquote>

<p><strong>Input:</strong><br />
Customer table:<br /></p>

<table>
  <thead>
    <tr>
      <th>tweet_id</th>
      <th>content</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>Vote for Biden</td>
    </tr>
    <tr>
      <td>2</td>
      <td>Let us make America great again!</td>
    </tr>
  </tbody>
</table>

<p><strong>Question</strong> <br />
Write an SQL query to find the IDs of the invalid tweets. The tweet is invalid if the number of characters used in the content of the tweet is <strong>strictly greater than 15.</strong></p>

<h3 id="152-solution">1.5.2 Solution</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
    <span class="n">tweet_id</span>
<span class="k">FROM</span>
    <span class="n">Tweets</span>
<span class="k">WHERE</span>
    <span class="k">length</span><span class="p">(</span><span class="n">content</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">15</span>
</code></pre></div></div>

<p>문제에서 요구한 글자수가 15보다 많은 tweet_id를 추출하기 위해서 content 데이터의 글자수를 알아야한다. character형태의 데이터의 글자수를 알기 위해서는 <code class="language-plaintext highlighter-rouge">length()</code> 함수를 활용하면 된다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="SQL" /><category term="LeetCode" /><summary type="html"><![CDATA[  안녕하세요. 데이터 분석가에게 SQL 활용 능력은 필수적이라 생각됩니다. 웬만한 데이터 분석가 JD 요구사항에 SQL 활용능력이 없는 경우는 없더군요. 저도 데이터 분석가 업무를 하면서 실무에서 유사(?) SQL을 활용해 데이터 마트를 만들지만 내가 SQL을 제대로 다루고 있는지 항상 의문이 따라왔습니다. 게다가 제 SQL 활용 능력이 어느정도인지 궁금하기도 했습니다. 따라서 실무 외에 SQL을 제대로 한 번 공부해보고 싶었고, 그 중 하나로 웹에 SQL 문제를 풀어보기로 했습니다. 구글링을 해보니 SQL 문제를 제공하는 여러 사이트가 나왔고, 그 중에서 LeetCode가 50문제 정도를 무료로 제공하길래 시작으로 괜찮다 싶어서 정했습니다! 리트코드 50문제를 풀어보고 문제별로 Solution을 이 블로그에 정리하고자 합니다.]]></summary></entry><entry><title type="html">[하루일기] 23년 6월 13일: 감정적인 대응</title><link href="http://localhost:4000/data/daily_memo/" rel="alternate" type="text/html" title="[하루일기] 23년 6월 13일: 감정적인 대응" /><published>2023-06-13T00:00:00+09:00</published><updated>2023-06-14T06:55:00+09:00</updated><id>http://localhost:4000/data/daily_memo</id><content type="html" xml:base="http://localhost:4000/data/daily_memo/"><![CDATA[<p>  오늘 클라이언트와 아주 약간 언짢은 상황이 발생했다. 좀처럼 적극적으로 액션을 취하지 않는 클라이언트에게 나도 팀장님도 답답함이 계속 쌓여가는 상황이었는데, 클라이언트와 커뮤니케이션 과정에서 감정적인 대응이 나와버렸다. 화를 내거나 공격적인 언사를 한 것은 아니었지만, 스스로 조금 더 냉정하게 대응했으면 어떘을까 하는 아쉬움이 많이 남습니다. <br /><br /></p>

<p>  상황은 이러했다. 팀장님은 답답한 마음에 타 사업부에 분석 사례를 클라이언트가 참고할 수 있도록 공유하라 지시했고, 짧은 메시지와 함꼐 자료를 첨부하여 메일을 보냈다. 문제는 클라이언트가 굉장히 불편하게 받아들이면서 발생했다. 클라이언트가 마치 자기보고 배우라는 듯이 자료를 보낸거냐부터 시작해서 엔지니어 입장에서 택도 없는 분석이라면서 말도 안되는 거라면서 따졌다. (물론, 숨은 의도는 그게 맞다. 게다가 자료는 공장 엔지니어가 직접 작성한 자료라 아예 틀린 말은 아닐 것이다.) 여기서 나의 올바른 대응은 나도 팀장님의 지시사항을 수행한 것이며, 도움이 될 수 있도록 자료를 공유하고자 한 것이라고 어필을 해야 했다. 하지만 그 동안 답답한 마음이 쌓였던 탓인지 자그마한 설전이 오고가게 됐다. 도메인 영역 지식으로 논리를 펼치니 난 더 할 말이 없었고, 알겠다고 수긍하며 일단락 지었다. <br /><br /></p>

<p>  오늘 일련의 해프닝을 겪으며 스스로에게 아쉬었던 점은 다음과 같다</p>
<blockquote>
  <ol>
    <li>감정적으로 대응한 점
      <ul>
        <li>내 뜻대로 안된다고 답답해하거나 조급해 하지 말기</li>
        <li>감정적인 반응에 감정적으로 맞대응 하지 말기</li>
      </ul>
    </li>
    <li>나의 역할은 중간 커뮤니케이선
      <ul>
        <li>클라이언트와 팀장 사이에 중간 커뮤니케이션 분배 잘하기</li>
        <li>책임과 역할 소재 분명히 하기</li>
      </ul>
    </li>
    <li>어설픈 논리와 근거로 커뮤니케이션 하지 않기
      <ul>
        <li>상대방은 한 분야의 전문가이므로 어설픈 얘기는 통하지 않음</li>
        <li>적어도 최소한의 논리로 무장하기</li>
      </ul>
    </li>
  </ol>
</blockquote>

<p>  일을 하다보면 클라이언트와 의견 충돌이 발생하고 언쟁이 발생할 수 있다고 생각하고 실제로 벌어졌습니다. 갈등 상황을 피하는 것이 능사는 아니라 생각합니다. 서로의 의견을 논리정연하게 피력하고 건설적으로 대화하는 것이 중요하겠죠. 다만, 감정적으로 대응하는 것은 프로답지 못한 행동이라 생각되고 반성하게 되네요. 앞으로는 오늘같은 일이 일어나더라도 차분하고 이성적으로 대응할 수 있는 사람이 되도록 노력하겠습니다.</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Memoir" /><summary type="html"><![CDATA[  오늘 클라이언트와 아주 약간 언짢은 상황이 발생했다. 좀처럼 적극적으로 액션을 취하지 않는 클라이언트에게 나도 팀장님도 답답함이 계속 쌓여가는 상황이었는데, 클라이언트와 커뮤니케이션 과정에서 감정적인 대응이 나와버렸다. 화를 내거나 공격적인 언사를 한 것은 아니었지만, 스스로 조금 더 냉정하게 대응했으면 어떘을까 하는 아쉬움이 많이 남습니다.]]></summary></entry><entry><title type="html">[회고록] 23년 6월 2주차: 분석 능력이란 뭘까?</title><link href="http://localhost:4000/data/weekly_memoir_6/" rel="alternate" type="text/html" title="[회고록] 23년 6월 2주차: 분석 능력이란 뭘까?" /><published>2023-06-12T00:00:00+09:00</published><updated>2023-06-13T05:40:00+09:00</updated><id>http://localhost:4000/data/weekly_memoir_6</id><content type="html" xml:base="http://localhost:4000/data/weekly_memoir_6/"><![CDATA[<p>  최근 SNS 중 하나인 링크드인을 자주 봅니다. 따로 글을 쓰거나 하진 않지만, 제가 몸담고 있는 업계에 다른 동료분들이 어떤 생각을 가지고 일하는 지 알 수 있어서 꽤 재밌게 보고 있습니다. 링크드인 속에는 수많은 데이터 분석가(+데이터 전문가) 분들이 있고, 저마다의 업무 역량, 분석 역량을 뽐내고 계십니다. 피드들을 열심히 눈팅하다보니 문득 그런 생각이 들더군요. <strong>그렇다면 과연 분석 능력이란 뭘까요?</strong> 나의 분석 능력은 뛰어나다고 할 수 있는 건가? 나는 좋은 분석가인가? 라는 고민이 이어지게 됩니다.<br /><br /></p>

<p>  생각하면 할수록 정말 답하기 어려운 질문인 것 같습니다. 업무 분야도 다 다르고 각자 생각하는 기준이 다 다르기 떄문이기에 딱 하나의 정답은 없는 것 같습니다. 별다른 구분 없이 생각나는대로 나열해보겠습니다.</p>

<blockquote>
  <ol>
    <li><span style="color:red">데이터 분석을 통해 프로덕트에 유의미한 성장을 이끌어 냄</span></li>
    <li><span style="color:red">데이터 분석을 통해 클라이언트의 문제를 해결해 냄</span></li>
    <li>최신 예측 모형에 대하여 꾸준히 학습하고 예측력이 좋은 ML 모형을 개발할 줄 암</li>
    <li>데이터 분석을 수행할 다양한 Tool을 다룰줄 암</li>
    <li>데이터 핸들링을 기가막히게 함</li>
    <li>BI를 활용해 대쉬보드/리포트/분석화면을 설계하고 개발함</li>
    <li>도메인 지식에 대한 깊이있는 이해가 있음</li>
    <li>데이터 분석 결과를 타인에게 설득할 수 있는 커뮤니케이션 스킬 혹은 문서 작성 스킬</li>
    <li>업무를 대하는 태도, 책임감, 성실함 등</li>
  </ol>
</blockquote>

<p>  데이터 분석가의 가장 궁극적인 목표는 결국 1 &amp; 2번은 잘 할 수 있는 분석가가 되는 것이겠죠. 다만, 이는 온전히 개인의 역량으로 뭔가를 이루어내기 어렵다는 점에서 분석가의 개인적인 분석 능력이라 평하기는 매우 어렵습니다. 그리고 따지고 보면 1 &amp; 2번 외에 나머지 항목들은 결국 1 &amp; 2번을 잘하기 위한 것들입니다. 데이터 분석을 잘 하기 위한 도구인거죠. 칼을 잘 다룬다고 무조건 맛있는 음식을 만들어 내는 것은 아닌 것처럼 다양한 도구를 잘 다룬다고 데이터 분석을 잘한다고 하기는 어렵습니다. 실제로 IT 기반 &amp; 코딩 능력 하나 없이 셀프서비스 소프트웨어를 활용해 데이터 분석을 기가막히게 본업에 활용해 유의미한 가치를 만들어내는 분들도 봤습니다. 물론, 도구를 잘 다루면 분석을 잘하고 분석 능력이 좋을 확률은 그렇지 않은 사람보다 훨씬 더 높다고 생각합니다. 하지만 중요한 것은 본질을 놓쳐서는 안된다는 것입니다. 너무 기술적인 부분에 집중하다보면 정작 분석에 있어서는 아쉬운 부분이 있을 수도 있다고 생각합니다. <br /><br /></p>

<p>  그렇다보니 시중에 쏟아지는 최신 기술, 동향에 압도되기 보다는 현재 본인 업무에 있어서 필요한 것을 채워가는게 중요하다고 생각합니다. 저도 가끔은 쏟아지는 최신 기술, 트렌드에 압도되는 것 같을 때도 있고 조급해질 떄도 있습니다. 그럴때면 괜히 조바심을 내기보다는 천천히 내가 부족한 것을 채우기 위해, 그리고 내 분석 업무에 도움될 만한 것들을 갖추기 위해 노력하고 있습니다. 그러다 보면 더 나은, 더 뛰어난 분석가가 될 수 있다고 생각하며 계속 채워나가는 중입니다. 개인적으로 요즘 가장 중요하게 생각하는 것은 분석함에 있어서 얼마나 논리적으로 사고하는가 입니다. 우리가 마주한 문제에 있어서 논리적으로 가설을 세우고 정리하여 접근해야지 헤매지 않고 답을 발견해 나갈 수 있다 생각합니다. 논리가 빈약한 채로 분석을 하면 장담컨대 답을 도출해 내기 어려울 뿐만 아니라 클라이언트를 설득하기는 더 어려울 것입니다. 그래서 전 의식적으로라도 더 논리적으로 사고하고 문제에 접근하고자 노력하고 있습니다. 가장 좋은 방법은 훌룡한 선배, 동료들의 방식을 보고 배우는 것입니다. 그렇기에 좋은 동료가 있는 집단으로 가야하는 것이구요. <br /><br /></p>

<p>  앞서 말했듯이 뛰어난 분석 능력은 무엇인가에 대한 하나의 답은 없는 것 같습니다. 하지만 분석가에 존재의의에 대해 고민하다보면 뛰어난 분석가가 되기 위해 무엇을 잘 해야 하는지는 명확한 것 같습니다. 훌룡한 분석가가 되기 위해 꾸준하게 나아가고자 합니다. 우리 모두 화이팅입니다!</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Memoir" /><summary type="html"><![CDATA[  최근 SNS 중 하나인 링크드인을 자주 봅니다. 따로 글을 쓰거나 하진 않지만, 제가 몸담고 있는 업계에 다른 동료분들이 어떤 생각을 가지고 일하는 지 알 수 있어서 꽤 재밌게 보고 있습니다. 링크드인 속에는 수많은 데이터 분석가(+데이터 전문가) 분들이 있고, 저마다의 업무 역량, 분석 역량을 뽐내고 계십니다. 피드들을 열심히 눈팅하다보니 문득 그런 생각이 들더군요. 그렇다면 과연 분석 능력이란 뭘까요? 나의 분석 능력은 뛰어나다고 할 수 있는 건가? 나는 좋은 분석가인가? 라는 고민이 이어지게 됩니다.]]></summary></entry><entry><title type="html">[회고록] 23년 5월 3주차: 에너지 절감</title><link href="http://localhost:4000/data/weekly_memoir_5/" rel="alternate" type="text/html" title="[회고록] 23년 5월 3주차: 에너지 절감" /><published>2023-05-21T00:00:00+09:00</published><updated>2023-05-21T20:08:00+09:00</updated><id>http://localhost:4000/data/weekly_memoir_5</id><content type="html" xml:base="http://localhost:4000/data/weekly_memoir_5/"><![CDATA[<p>  안녕하세요. 요즘엔 <strong>데이터 분석을 통해 공장에서 사용하는 에너지 절감 프로젝트</strong>를 수행중에 있습니다. 최근 에너지 원가 상승으로 인하여 에너지 비용이 증가하여 공장 입장에서는 부담이 되고 있는 상황입니다. 따라서 공장에서는 에너지 절감을 위해 다양한 활동을 수행하고 있고, 그 노력의 일환으로 데이터 분석을 통한 에너지 사용 절감안을 도출하고자 합니다. ‘23년 1년 프로젝트로 기획됐고 2월부터 시작해 현재 진행중에 있습니다. 보안 상 디테일한 부분을 얘기하긴 어렵지만 어떻게 데이터 분석 프로젝트를 진행하고 있는지 간략하게만 기록하겠습니다.
<br /><br />
  에너지 절감을 위하여 다양한 접근 방법이 있겠지만 우리는 다음과 같은 방식으로 단계로 데이터 분석 프로젝트를 진행했습니다.</p>

<h2 id="1-에너지-파악">1. 에너지 파악</h2>
<p>  우선, 공장에서 사용하고 있는 에너지 종류와 에너지 별 사용 목적에 대해 파악이 필요합니다. 어떤 에너지를 사용하고 있고, 공장에서 사용하고 있는 다양한 에너지 중 가장 중요도가 큰 에너지는 무엇인지, 어느 공정에 어떤 목적으로 사용되고 있는지 등에 대한 공정 파악이 필요합니다. 에너지 사용 공정 메커니즘에 대한 이해없는 데이터 분석을 통해 유효한 인사이트를 도출하기는 어렵기 때문입니다.</p>
<blockquote>
  <ul>
    <li>사용 에너지 종류, 중요도(우선순위), 사용 목적 파악</li>
    <li>에너지 사용 공정에 대한 공정 메커니즘 파악</li>
  </ul>
</blockquote>

<h2 id="2-데이터-수집">2. 데이터 수집</h2>
<p>  프로젝트 대상 공장에서 사용하고 있는 에너지에 대한 파악이 되면, 본격적인 데이터 분석을 위한 데이터 수집이 필요합니다. 중요한 것은 에너지 사용량을 데이터로 관리하고 있는지부터 알아야 합니다(데이터가 없다면 애초에 분석 프로젝트 진행이 불가합니다). 데이터가 있다면 어디에 어떻게 관리하고 있는지, 어떻게 데이터를 가져와서 분석할 것인지에 대한 논의가 필요합니다.</p>
<blockquote>
  <ul>
    <li>데이터 존재 여부 파악(에너지 사용량, 관련 공정 센싱, 품질 데이터 등)</li>
    <li>데이터 저장 위치, 형태 등 파악</li>
    <li>데이터 전처리 및 분석 데이터 마트 생성</li>
    <li>BI 분석 화면 개발</li>
  </ul>
</blockquote>

<h3 id="21-데이터-이슈">2.1 데이터 이슈</h3>
<p>  현재 프로젝트 대상 공장에서는 공정/설비별로 사용하고 있는 에너지 사용량을 일/월 별로 기입하여 관리하고 있었고, 분석 데이터 마트를 생성하기 위해서는 엑셀로부터 데이터를 추출하는 프로그램을 짜야했습니다. 문제는 작업자가 일일이 수기로 입력한 데이터 이기에 오기입된 데이터도 많고 예외처리를 해야할 것이 정말 많았습니다. 이 오류를 처리하는데 애 많이 먹었습니다😭. 이에 더하여 외기온도 데이터가 필요한데 공장에서 수집하는 데이터가 없었기에, 공공기관데이터포털에서 제공하는 지역별 온도 데이터를 수집해서 대용으로 사용했습니다. rest api 호출하는 방식을 활용해 가져오는 데이터 추출 코드를 짜봤는데 재밌었습니다😄.</p>

<h3 id="22-주의할-점">2.2 주의할 점</h3>
<p>  데이터의 단위를 정확하게 확인해야 합니다. 특히, 공학, 자연과학 계열 전공자가 아니라 사회계열, 수리계열, 컴공계열 전공자라면 에너지(물질) 단위가 굉장히 헷갈릴 수 있습니다. 예를 들어, 유량 단위인지, 질량 단위인지 그리고 일별 사용량인지, 시간당 사용량인지 등 정확하게 파악이 필요합니다. 만약 단위를 제대로 감안하지 않은 채로 데이터 전처리하고 분석을 진행한다면 후에 계산이 잘못될 수 있으니 유의해야 합니다.</p>

<h2 id="3-에너지-사용-현황-파악-문제점-도출">3. 에너지 사용 현황 파악, 문제점 도출</h2>
<p>  앞의 과정은 데이터 분석을 위한 준비과정이었다면 여기서부턴 본격적인 데이터 분석 과정에 들어갑니다. 이번 프로젝트에서는 다음 절차로 진행했습니다.</p>

<h3 id="31-분석-대상-순서-선정">3.1 분석 대상, 순서 선정</h3>
<p>  공장에서는 다양한 에너지를 사용해 제품을 생산하기 때문에 우선순위를 선정하여 진행합니다. (물론 인력이 충분하고 여유가 있다면 모든 에너지에 대하여 한 번에 진행해도 됩니다. 다만, 현실적으로 매우 어렵죠) 데이터 현황분석을 통해 사용량이 가장 많고 산포가 큰 에너지 순으로 우선순의를 정하거나 혹은 클라이언트의 요청으로 우선순위를 정하게 됩니다. 에너지 사용 산포가 작거나, 중요도가 낮은 에너지의 경우 분석 대상에서 제외되는 경우도 있습니다. 분석 대상이 선정된다면 관련 공정 메커니즘에 대한 이해는 필수입니다! 대상 공정에서 에너지가 사용되는 목적과 공정/품질 관리 인자와 기준 존재 여부 등 에너지 관련 공정 메커니즘 파악이 필요합니다.</p>
<blockquote>
  <ul>
    <li>분석 대상 및 우선순위 선정</li>
    <li>분석 대상 공정 메커니즘(에너지 관련) 파악</li>
  </ul>
</blockquote>

<h3 id="32-문제점-진단">3.2 문제점 진단</h3>
<p>  분석 대상이 선정되면 문제점을 진단해야 합니다. 현재 에너지 사용량이 적정 수준을 벗어나 과다한 것은 아닌 지, 절감 요소는 존재하는지 판단해야 합니다. <br /><br />
  그렇다면 <strong>판단 기준</strong>은 무엇일까요?<br />
  가장 기본은 <span style="color:red"><strong>외생 변수</strong></span> 기준으로 체크하는 것입니다. 보통 가정집에서도 전기 요금을 비교할 때, 동월 간 비교를 합니다. 왜일까요? 보통 여름에 에어컨을 틀면서 전기 요금이 많이 청구되고 따라서 환절기와 하절기 간 전기 요금 비교는 무의미하기 때문입니다. 공장도 마찬가지입니다. 동일 기온, 동일 생산조건, 동일 생산량(투입량)을 기준으로 에너지 사용량을 비교해야 합니다. 예를 들어, 계절별로 에너지 사용량에 차이가 발생하는 경우 외기온도를 고정시킨 다음에 에너지 사용량의 산포를 확인해야 합니다. 따라서 특정 공정별 사용 에너지에 따라 외생변수를 잘 정의해야 할 필요가 있습니다. <br />
  다음으로는 <span style="color:red"><strong>공정 변경 혹은 운전 패턴 변경</strong></span> 이력에 따른 에너지 사용량 변동을 파악하는 것입니다. 과거 공정 운전 패턴의 변경에 따라 에너지 사용량의 변화가 있는지 비교하여 현재 에너지 사용량에 대한 수준을 파악할 수 있습니다. 공정 운전 패턴 변경이 에너지 관점에서 낭비가 발생한다면 재검토해 볼 필요가 있을 수 있고 혹은 추가 개선 포인트를 도출해 낼 수 도 있을 겁니다. <br /><br />
  판단 기준에 따라 현재 에너지 사용이 적절한 지 혹은 과거 대비 낭비요소가 있는 지 등 다양한 측면에서 문제점을 진단합니다. 만약 낭비요소가 존재한다면 다음 스텝으로 넘어가 산포 발생 원인을 도출하는 작업을 하게 됩니다. 낭비요소 없이 현 수준이 최적 에너지 사용 상태라면 더 이상 분석을 진행하지 않습니다.</p>
<blockquote>
  <ul>
    <li>에너지 별 외생변수 파악</li>
    <li>공정 운전 패턴 변경이력 파악</li>
    <li>문제점 진단</li>
  </ul>
</blockquote>

<h4 id="321-주의사항">3.2.1 주의사항</h4>
<p>  에너지 사용 문제점을 진단할 때 반드시 고려해야 할 부분이 바로 <strong>공정 품질</strong>입니다. 에너지 사용량을 절감했지만 공정 품질을 만족하지 못한다면 이는 에너지 사용 과소 상태로 적절한 수준의 에너지 사용량이 아닙니다. 이 상태에서는 오히려 에너지를 더 투입하여 품질을 만족시켜야만 합니다. 반대로 현재 에너지 사용 수준에서 품질 관리 수준 대비 마진이 커 여유가 있다면, 에너지 과다 상태로 에너지 절감안 도출을 검토해 볼 수 있습니다.</p>

<h2 id="4-다음-회고록을-기약하며">4. 다음 회고록을 기약하며…</h2>
<p>  회고록을 작성하다보니 처음 생각한 것 보다 내용이 너무 길어졌습니다. 현재 진행중인 프로젝트이기도 하고 남은 내용은 다음 회고록에 적을 수 있도록 하겠습니다. 그럼 이번 회고록은 여기서 마치도록 하겠습니다. 감사합니다!</p>]]></content><author><name>박마토</name></author><category term="Data" /><category term="Data" /><category term="Memoir" /><summary type="html"><![CDATA[  안녕하세요. 요즘엔 데이터 분석을 통해 공장에서 사용하는 에너지 절감 프로젝트를 수행중에 있습니다. 최근 에너지 원가 상승으로 인하여 에너지 비용이 증가하여 공장 입장에서는 부담이 되고 있는 상황입니다. 따라서 공장에서는 에너지 절감을 위해 다양한 활동을 수행하고 있고, 그 노력의 일환으로 데이터 분석을 통한 에너지 사용 절감안을 도출하고자 합니다. ‘23년 1년 프로젝트로 기획됐고 2월부터 시작해 현재 진행중에 있습니다. 보안 상 디테일한 부분을 얘기하긴 어렵지만 어떻게 데이터 분석 프로젝트를 진행하고 있는지 간략하게만 기록하겠습니다.   에너지 절감을 위하여 다양한 접근 방법이 있겠지만 우리는 다음과 같은 방식으로 단계로 데이터 분석 프로젝트를 진행했습니다.]]></summary></entry></feed>